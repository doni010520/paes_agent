{
  "name": "LidIA PAES",
  "nodes": [
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "paes_contacts",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Get_Info').item.json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4180,
        960
      ],
      "id": "c0bd4a06-5324-4baa-bce9-d19255e7f881",
      "name": "Check_lead",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "NaykEDQV12GNNguL",
          "name": "Supabase PAES"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f95de353-6402-4bad-8f2f-3cc4bc0c5bde",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3940,
        960
      ],
      "id": "8fa10e2d-4778-4a8a-bf98-3213c6d297cd",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7423dace-d0ee-4bc7-bb80-2468155d7980",
              "leftValue": "={{ $json.from_me }}",
              "rightValue": "incoming",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "9b18c34e-4c48-47b6-990c-4b6fa33b9a1d",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5140,
        1080
      ],
      "id": "b084387a-1d5e-4f0e-9f47-6176c0db0a02",
      "name": "If6"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -4900,
        1220
      ],
      "id": "36cad076-3554-4687-bcfe-98cc052c25c1",
      "name": "No Operation, do nothing2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -4540,
        3060
      ],
      "id": "59de9449-a5fd-4ce5-99c9-8c5b9e25b7df",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Get_info').item.json.message }}",
        "options": {
          "systemMessage": "=# IMPORTANTE\nSe {{ $('Get_info').item.json.message }} come√ßar com PerguntasIA12 siga o # Prompt 1. \nSe {{ $('Get_info').item.json.message }} come√ßar com AgendaIA12 siga o # Prompt 2.\nSe {{ $('Get_info').item.json.message }} come√ßar com BaseIA12 siga o # Prompt 3.\nSe {{ $('Get_info').item.json.message }} come√ßar com ArquivosIA12 apenas gere um output com \"atualizar\".\n\n\n# Prompt 1 {\n  \"name\": \"AgenteTreinamentoPerguntas\",\n  \"description\": \"Agente interno que processa e registra pares de pergunta e resposta corrigidos em uma planilha, para fins de treinamento de IA.\",\n  \"objectives\": [\n    \"Verificar se o texto segue exatamente o formato: 'Pergunta: ... Resposta: ...'\n     Ex: PerguntasIA12\n         Pergunta: Qual o horario de atendimento? \n         Resposta: O antendimento √© das 8h √†s 12h.\",\n    \"Corrigir ortografia e estrutura da pergunta e da resposta\",\n    \"Remover acentos e caracteres especiais antes de salvar\",\n    \"Verificar se j√° existe uma pergunta id√™ntica (sem acentos) na planilha\",\n    \"Se existir, substituir a entrada pela nova vers√£o corrigida\",\n    \"Se n√£o existir, criar nova entrada\",\n    \"Se o texto n√£o estiver no formato correto, n√£o executar nenhuma ferramenta\",\n    \"Se o texto for apenas para corre√ß√£o (sem pedido de registro), tamb√©m n√£o executar nenhuma ferramenta\"\n  ],\n  \"tools\": [\n    {\n      \"name\": \"Treinamento_perguntas_feito\",\n      \"description\": \"Verifica se a pergunta (sem acentos) j√° existe na planilha. Se existir, ser√° substitu√≠da.\"\n    },\n    {\n      \"name\": \"Atualizar_treinamento_perguntas\",\n      \"description\": \"Cria ou atualiza uma entrada na planilha com a pergunta e resposta corrigidas, sem acentos. Colunas: 'pergunta', 'resposta'.\"\n    }\n  ],\n  \"general_rules\": [\n    \"N√£o gerar nenhuma resposta ou sa√≠da vis√≠vel para o usu√°rio\",\n    \"N√£o mencionar ferramentas, planilhas ou a√ß√µes internas\",\n    \"Nunca inventar perguntas nem respostas\",\n    \"Corrigir sempre ortografia e remover acentos antes de usar as ferramentas\",\n    \"Executar as ferramentas apenas se o formato 'Pergunta: ... Resposta: ...' for seguido corretamente\",\n    \"Ignorar qualquer entrada fora do formato esperado\",\n    \"Idioma sempre em portugu√™s\"\n  ]\n}\n\n# Prompt 2 {\n  \"name\": \"AgenteTreinamentoAgenda\",\n  \"description\": \"Agente interno que processa e registra informa√ß√µes corrigidas em uma planilha, para fins de treinamento de IA.\",\n  \"objectives\": [\n    \"Verificar se o texto segue exatamente o formato: 'Nome, Descricao, Local, Data incio, Data final, Hora, valor, Link'\n     Ex: AgendaIA12\n         Nome: Culto aos domingos \n         Descricao: Um tempo de adora√ß√£o, onde o C√©u se abre e Deus faz o novo!\n         Local:  Av. Bernardo Vieira de Melo 1200 | Piedade\n         Data inicio: 24/08/2025\n         Data final: 26/08/2025\n         Hora: Em tr√™s hor√°rios: 8h, 10h e 17h\n         Valor: Livre\n         Link: www.paes.com,\n    \"Corrigir ortografia e estrutura da pergunta e da resposta\",\n    \"Remover acentos e caracteres especiais antes de salvar\",\n    \"Verificar se j√° existe uma pergunta id√™ntica (sem acentos) na planilha\",\n    \"Se existir, substituir a entrada pela nova vers√£o corrigida\",\n    \"Se n√£o existir, criar nova entrada\",\n    \"Se o texto n√£o estiver no formato correto, n√£o executar nenhuma ferramenta\",\n    \"Se o texto for apenas para corre√ß√£o (sem pedido de registro), tamb√©m n√£o executar nenhuma ferramenta\"\n  ],\n  \"tools\": [\n    {\n      \"name\": \"Treinamento_agenda_feito\",\n      \"description\": \"Verifica se o nome (sem acentos) j√° existe na planilha. Se existir, ser√° substitu√≠do.\"\n    },\n    {\n      \"name\": \"Atualizar_treinamento_agenda\",\n      \"description\": \"Cria ou atualiza uma entrada na planilha com o nome, descricao, local, data, hora e valor corrigidos, sem acentos. Colunas: 'Nome', 'Descricao', 'Local', 'Data inicio', 'Data final', 'Hora', 'Valor', 'Link'.\"\n    }\n  ],\n  \"general_rules\": [\n    \"N√£o gerar nenhuma resposta ou sa√≠da vis√≠vel para o usu√°rio\",\n    \"N√£o mencionar ferramentas, planilhas ou a√ß√µes internas\",\n    \"Nunca inventar nome, descricao, local, data, hora nem valor\",\n    \"Corrigir sempre ortografia e remover acentos antes de usar as ferramentas\",\n    \"Executar as ferramentas apenas se o formato 'Nome:...., Descricao:...., Local:..., Data inicio:....., Data final:....., Hora:...., Valor:.....' for seguido corretamente\",\n    \"Ignorar qualquer entrada fora do formato esperado\",\n    \"Idioma sempre em portugu√™s\"\n  ]\n}\n\n# Prompt 3 {\n  \"name\": \"AgenteTreinamentoBase\",\n  \"description\": \"Agente interno que processa e registra trios TAG, TEXTO e Funcao corrigidos em uma planilha, para fins de treinamento de IA.\",\n  \"objectives\": [\n    \"Verificar se o texto segue exatamente o formato: 'Tag, Texto, Funcao'\n     Ex: BaseIA12\n         Tag: PASTOR TARCISIO TRAVASSOS \n         Texto: \"üéì\nForma√ß√£o: Bacharel em Sistemas de Informa√ß√£o (Est√°cio de S√°); P√≥s-gradua√ß√£o em Engenharia de Dados (Faculdade Focus); Teologia pelo Semin√°rio Anglicando de Ensino\n\nExperi√™ncia: TI ‚Äì Desenvolvimento, Banco de Dados e Solu√ß√µes para Sa√∫de.\n\n‚õ™\n√Åreas de Servi√ßo:\n\nJuventude ‚Ä¢ Tecnologia ‚Ä¢ Ensino B√≠blico\n\nIntegra f√©, voca√ß√£o e servi√ßo com criatividade e compromisso.\n\nüìã\nMinist√©rios Pastoreados:\n\nArca\nHappening\nAcampamentos\nArca Junior\nProje√ß√£o\nSom\nTransmiss√£o\nIlumina√ß√£o\nüèÖ\nAtividades F√≠sicas:\n\nFutev√¥lei ‚Äì na ra√ßa\nV√¥lei ‚Äì com habilidade\nSurf ‚Äì sempre que pode\nCorrida ‚Äì para manter o ritmo\nT√™nis ‚Äì de vez em quando\nEsporte √© cuidar do corpo, aliviar a mente e conectar-se com Deus.\n\nüë™\nVida Pessoal: Casado com Camila; Pai de Theo, Lis e Dora.\"\n         Funcao:  Pastor auxiliar,         \n    \"Corrigir ortografia e estrutura da pergunta e da resposta\",\n    \"Remover acentos e caracteres especiais antes de salvar\",\n    \"Verificar se j√° existe uma pergunta id√™ntica (sem acentos) na planilha\",\n    \"Se existir, substituir a entrada pela nova vers√£o corrigida\",\n    \"Se n√£o existir, criar nova entrada\",\n    \"Se o texto n√£o estiver no formato correto, n√£o executar nenhuma ferramenta\",\n    \"Se o texto for apenas para corre√ß√£o (sem pedido de registro), tamb√©m n√£o executar nenhuma ferramenta\"\n  ],\n  \"tools\": [\n    {\n      \"name\": \"Treinamento_base_feito\",\n      \"description\": \"Verifica se a Tag (sem acentos) j√° existe na planilha. Se existir, ser√° substitu√≠da.\"\n    },\n    {\n      \"name\": \"Atualizar_treinamento_base\",\n      \"description\": \"Cria ou atualiza uma entrada na planilha com o Tag, Texto e funcao corrigidos, sem acentos. Colunas: 'Tag', 'Texto', 'Funcao'.\"\n    }\n  ],\n  \"general_rules\": [\n    \"N√£o gerar nenhuma resposta ou sa√≠da vis√≠vel para o usu√°rio\",\n    \"N√£o mencionar ferramentas, planilhas ou a√ß√µes internas\",\n    \"Nunca inventar nome, descricao, local, data, hora nem valor\",\n    \"Corrigir sempre ortografia e remover acentos antes de usar as ferramentas\",\n    \"Executar as ferramentas apenas se o formato 'Tag:...., Texto:...., Funcao:...' for seguido corretamente\",\n    \"Ignorar qualquer entrada fora do formato esperado\",\n    \"Idioma sempre em portugu√™s\"\n  ]\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -4420,
        2860
      ],
      "id": "e7ef1c35-bd4a-48b6-96b5-ae6d8ce6d2b1",
      "name": "Agente de Treinamento RAG"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents_paes",
          "mode": "list",
          "cachedResultName": "documents_paes"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "d5b669a4-4c92-46ef-bc5b-deae1106bf6c",
      "name": "Insert into Supabase Vectorstore1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -900,
        3180
      ],
      "credentials": {
        "supabaseApi": {
          "id": "NaykEDQV12GNNguL",
          "name": "Supabase PAES"
        }
      }
    },
    {
      "parameters": {
        "separator": "\\n",
        "chunkSize": 1200,
        "chunkOverlap": 200
      },
      "id": "552b0269-6c8b-427d-934d-b62c835a3404",
      "name": "Character Text Splitter1",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -760,
        3580
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "include": "allFieldsExcept",
        "fieldsToExclude": "rew_number",
        "options": {}
      },
      "id": "3cc5dc6e-e690-4204-8abb-f16874ebb847",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -1700,
        3220
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "36c233be-8917-4f28-8684-a9d2b29a60eb",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -1040,
        3420
      ],
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "Arquivo",
                "value": "={{ $('Download File1').item.json.name }}"
              },
              {
                "name": "start_date",
                "value": "={{ $json.start_date }}"
              },
              {
                "name": "end_date",
                "value": "={{ $json.end_date }}"
              }
            ]
          }
        }
      },
      "id": "7c167784-da0d-44bf-bbc3-3c77e5594e65",
      "name": "Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -880,
        3420
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "239f30e7-abe3-406d-a18d-ecd372b6bfe8",
      "name": "Download File1",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2800,
        3120
      ],
      "executeOnce": false,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "UHAiYFoeJ4I5PruP",
          "name": "Google Drive PAES"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "e43cdeb0-97b9-4258-9475-9aa0110283b5",
      "name": "Extract from Excel2",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2300,
        3060
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "ccca58c4-2f24-4923-96de-da70d3325fe5",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2300,
        3400
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "b201fc7c-54e9-4ac1-bfc8-0f9cdd10732f",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2300,
        2880
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "07d23cea-f8ef-4a1c-b878-43441e4c31df",
      "name": "Summarize1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -1460,
        3220
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8c3933a1-0f13-467b-8bbf-40a71ba6ecad",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2300,
        3240
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents_paes",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "neq",
              "keyValue": "0"
            }
          ]
        }
      },
      "id": "49d746af-7bd3-47a7-ae99-ffe4ebf54725",
      "name": "Deleta linhas antigas do documento1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3180,
        3120
      ],
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "supabaseApi": {
          "id": "NaykEDQV12GNNguL",
          "name": "Supabase PAES"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -3480,
        2840
      ],
      "id": "12576ae5-df4c-465b-9658-f8e246d1989e",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "d324b22b-cdf4-4216-a5ac-7db17ab11851"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "excel"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8bd558b2-8c70-4edd-ab19-92540895ae46",
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/vnd.google-apps.spreadsheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CVS"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Google Docs"
            }
          ]
        },
        "options": {
          "fallbackOutput": 3
        }
      },
      "id": "675b85a4-ecfa-423d-847b-73702fb56cde",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2620,
        3100
      ]
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1adCcokQfzB-eTsGRDXhuyY7EGUqwjjej",
            "mode": "list",
            "cachedResultName": "Arquivos",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1adCcokQfzB-eTsGRDXhuyY7EGUqwjjej"
          }
        },
        "options": {
          "fields": [
            "mimeType",
            "id",
            "name"
          ]
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2980,
        3120
      ],
      "id": "61760e9a-3d84-4d17-9409-47565cf38e86",
      "name": "Search files and folders",
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "UHAiYFoeJ4I5PruP",
          "name": "Google Drive PAES"
        }
      }
    },
    {
      "parameters": {
        "content": "## TREINAMENTO DO AGENTE",
        "height": 1020,
        "width": 4040,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4620,
        2780
      ],
      "id": "0ae3ce00-3f68-4234-8a18-43c2b8bc215d",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use para buscar informa√ß√µes na planilha. ",
        "documentId": {
          "__rl": true,
          "value": "1M8-23ZKeTFwfrwZn7xnpH7QjExfhMZgqf2ePgXWWwsw",
          "mode": "list",
          "cachedResultName": "paes_informacoes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1M8-23ZKeTFwfrwZn7xnpH7QjExfhMZgqf2ePgXWWwsw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1629788788,
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1M8-23ZKeTFwfrwZn7xnpH7QjExfhMZgqf2ePgXWWwsw/edit#gid=1629788788"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -4520,
        3380
      ],
      "id": "11d9a116-8ee5-4c1d-a487-353ca07bc3ac",
      "name": "Treinamento_perguntas_feito",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GACkw8xs4zKWnLvv",
          "name": "Google Sheets PAES"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Analise se j√° existe uma coluna parecida. Se sim, atualize ela. Se n√£o, crie uma linha nova. ",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1M8-23ZKeTFwfrwZn7xnpH7QjExfhMZgqf2ePgXWWwsw",
          "mode": "list",
          "cachedResultName": "paes_informacoes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1M8-23ZKeTFwfrwZn7xnpH7QjExfhMZgqf2ePgXWWwsw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1629788788,
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1M8-23ZKeTFwfrwZn7xnpH7QjExfhMZgqf2ePgXWWwsw/edit#gid=1629788788"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Perguntas": "={{ $fromAI('Perguntas', ``, 'string') }}",
            "Respostas": "={{ $fromAI('Respostas', ``, 'string') }}"
          },
          "matchingColumns": [
            "Perguntas"
          ],
          "schema": [
            {
              "id": "Perguntas",
              "displayName": "Perguntas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Respostas",
              "displayName": "Respostas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -4340,
        3380
      ],
      "id": "ab151404-0089-44da-8e5b-7c3180913d6b",
      "name": "Atualizar_treinamento_perguntas",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GACkw8xs4zKWnLvv",
          "name": "Google Sheets PAES"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use para buscar informa√ß√µes na planilha. ",
        "documentId": {
          "__rl": true,
          "value": "1D8uYzES4pNXm-OXf4R8CtkDEhPrHTkYgJvsGiRvtDvg",
          "mode": "list",
          "cachedResultName": "paes_eventos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1D8uYzES4pNXm-OXf4R8CtkDEhPrHTkYgJvsGiRvtDvg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2028536990,
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1D8uYzES4pNXm-OXf4R8CtkDEhPrHTkYgJvsGiRvtDvg/edit#gid=2028536990"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -4140,
        3380
      ],
      "id": "5b3dcb93-45b3-435c-a48a-b7c27c0d733a",
      "name": "Treinamento_agenda_feito",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GACkw8xs4zKWnLvv",
          "name": "Google Sheets PAES"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Analise se j√° existe uma coluna parecida. Se sim, atualize ela. Se n√£o, crie uma linha nova. ",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1D8uYzES4pNXm-OXf4R8CtkDEhPrHTkYgJvsGiRvtDvg",
          "mode": "list",
          "cachedResultName": "paes_eventos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1D8uYzES4pNXm-OXf4R8CtkDEhPrHTkYgJvsGiRvtDvg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2028536990,
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1D8uYzES4pNXm-OXf4R8CtkDEhPrHTkYgJvsGiRvtDvg/edit#gid=2028536990"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nome": "={{ $fromAI('Nome__using_to_match_', ``, 'string') }}",
            "Local": "={{ $fromAI('Local', ``, 'string') }}",
            "Hora": "={{ $fromAI('Hora', ``, 'string') }}",
            "Valor": "={{ $fromAI('Valor', ``, 'string') }}",
            "Descricao": "={{ $fromAI('Descricao', ``, 'string') }}",
            "Link": "={{ $fromAI('Link', ``, 'string') }}",
            "Data inicio": "={{ $fromAI('Data_inicio', ``, 'string') }}",
            "Data final": "={{ $fromAI('Data_final', ``, 'string') }}"
          },
          "matchingColumns": [
            "Nome"
          ],
          "schema": [
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Descricao",
              "displayName": "Descricao",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Local",
              "displayName": "Local",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Data inicio",
              "displayName": "Data inicio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Data final",
              "displayName": "Data final",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hora",
              "displayName": "Hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Valor",
              "displayName": "Valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -3960,
        3380
      ],
      "id": "edd9e080-64d4-431c-b26d-9956ba1abd07",
      "name": "Atualizar_treinamento_agenda",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GACkw8xs4zKWnLvv",
          "name": "Google Sheets PAES"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 1) Pega todo o JSON de entrada\nconst input = $input.first().json;\n\n// 2) Se veio notifica√ß√£o de revoke, sai aqui\nif ($('Webhook1').first().json.body.notification === 'REVOKE') {\n  return [{ json: { response: 'revoke' } }];\n}\n\n// 3) Caso contr√°rio, continuamos processando a mensagem normalmente\nconst message = input.message || '';\n\n// ... seus outros ifs abaixo\nif (message.startsWith(\"TreinoIA12\") || message.startsWith(\"AgendaIA12\") || message.startsWith(\"ArquivosIA12\") || message.startsWith(\"BaseIA12\")) {\n  return [{ json: { response: 'treino' } }];\n}\nif (message.startsWith(\"ContatosIA12\")) {\n  return [{ json: { response: 'contatos' } }];\n}\nelse {\n  return [{ json: { response: 'atendimento' } }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4900,
        960
      ],
      "id": "b1f69103-dc16-4f54-a9a7-7af61c0da4c2",
      "name": "Code"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.response }}",
                    "rightValue": "atendimento",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "86c28ace-ae22-4e09-a0eb-31453b302892"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Atendimento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d37cce2b-7787-42d9-93e9-8d6a78e8ebe8",
                    "leftValue": "={{ $json.response }}",
                    "rightValue": "treino",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Treino"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "574469fd-e826-418f-b15c-730e35210c31",
                    "leftValue": "={{ $json.response }}",
                    "rightValue": "contatos",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Contatos"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -4460,
        960
      ],
      "id": "ffd4ecf6-89b4-4dd4-b047-4017342d0825",
      "name": "Switch"
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {}
      },
      "id": "594dfb4d-ed04-4c16-8400-444d4c9aad76",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1900,
        1860
      ],
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "89cad31b-d7bb-47eb-ba50-807cc1356dbe",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -2280,
        2040
      ],
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents_paes",
          "mode": "list",
          "cachedResultName": "documents_paes"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "774c7e43-d87a-4e25-ab47-2cdeee2a3d84",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -2240,
        1860
      ],
      "credentials": {
        "supabaseApi": {
          "id": "NaykEDQV12GNNguL",
          "name": "Supabase PAES"
        }
      }
    },
    {
      "parameters": {
        "name": "buscar_documentos",
        "description": "Busca informa√ß√µes sobre eventos, datas, hor√°rios e perguntas da igreja PAES. Para perguntas sobre 'quando', sempre inclua palavras como 'data', 'quando', 'julho'. Para eventos, use o nome completo: 'acampamento arca junior'. Tente varia√ß√µes: 'arca junior', 'acampamento julho'.\n\n‚ÄúBusca quaisquer informa√ß√µes armazenadas na base da PAES: eventos, datas, hor√°rios, mat√©rias, hist√≥rias e tamb√©m perfis de pessoas (nomes, cargos, minist√©rios).‚Äù",
        "topK": 7
      },
      "id": "f4eadf1d-eb50-4ec8-8561-f4366dad5b2b",
      "name": "buscar_documentos",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -2100,
        1700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "490c28ed-bd1e-4f29-8066-33819dbf9e2a",
              "name": "message",
              "value": "={{ $('Get_Info').item.json.message || $json.text || $json.content}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3900,
        -400
      ],
      "id": "3d774cd5-66ec-4100-8a2c-1b937daa0d46",
      "name": "message1"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Get_Info').item?.json?.telefone }}",
        "messageData": "={{ $json.message }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3680,
        -400
      ],
      "id": "984e6c8e-e141-41d2-a336-e1551ac37def",
      "name": "Redis2",
      "credentials": {
        "redis": {
          "id": "NhZVKhQf21wux2SS",
          "name": "Redis PAES"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Get_Info').item?.json?.telefone }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3240,
        -400
      ],
      "id": "546c91bf-5508-48a2-8f2a-d4d87224e37c",
      "name": "Redis3",
      "credentials": {
        "redis": {
          "id": "NhZVKhQf21wux2SS",
          "name": "Redis PAES"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c9ceff29-3d8f-4f60-bb66-fb02d02a4875",
              "leftValue": "={{ $json.propertyName?.last() }}",
              "rightValue": "={{ $('message1').item.json.message }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3020,
        -400
      ],
      "id": "ab14d171-f534-421c-9369-be5daa678558",
      "name": "If2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2800,
        -300
      ],
      "id": "838da422-2925-4a72-975d-f4a6cda3a4ae",
      "name": "No Operation, do nothing3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10cd3441-87b6-4599-ad7b-1c3aff3faab9",
              "name": "text_message",
              "value": "={{ $('Redis3').item.json.propertyName.join(', ') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2800,
        -500
      ],
      "id": "7e3aca1d-47cc-41d3-bcfc-cbdcc7645beb",
      "name": "join_messages1"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Get_Info').item?.json?.telefone }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2580,
        -500
      ],
      "id": "3d99e4cc-d9f7-4b46-aeae-d71e930503b1",
      "name": "clean1",
      "credentials": {
        "redis": {
          "id": "NhZVKhQf21wux2SS",
          "name": "Redis PAES"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -980,
        -440
      ],
      "id": "32c7e5de-1efc-4823-bd68-2fbe1a08b690",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -540,
        -300
      ],
      "id": "a98a4bb0-2a81-4a54-acc1-9e7725cc4f55",
      "name": "Wait2",
      "webhookId": "d70c6ba0-aabf-4dbf-97a5-8a030c8cfeae"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6af4c483-5a9e-444c-a4a9-e5f2fdee1f5d",
              "name": "text",
              "value": "={{ $json.output.replace(/\\*/g, '').split('\\n\\n') }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1820,
        -500
      ],
      "id": "689de4ca-0a5e-4aa2-96ea-1edc6aa2e3f6",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1260,
        -520
      ],
      "id": "e658640c-23bf-4f53-90b1-8229548cfa18",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3460,
        -400
      ],
      "id": "c970956b-31c7-4602-9b3c-74378c7645ea",
      "name": "Wait3",
      "webhookId": "e0002293-3b7d-40bf-90e8-ea434878bba1"
    },
    {
      "parameters": {
        "url": "={{ $('Get_info').item.json.audio_url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6800,
        2080
      ],
      "id": "8a88d153-80ef-45e6-bf92-ae8d93059291",
      "name": "download_audio1",
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -6600,
        2080
      ],
      "id": "761a1703-fcd8-4f01-b79b-d9389d20dc34",
      "name": "transcribe_audio1",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -680,
        -600
      ],
      "id": "229b9412-4301-4677-80c1-f0a63658bb24",
      "name": "No Operation, do nothing5"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "257ef35c-0705-4c83-b58e-683ca6607c93",
                    "leftValue": "={{ $('Get_info').item.json.message }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Get_info').item.json.file_type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "64451f87-a1da-4bf6-928c-ee41e884d829"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "54d70c63-a0f8-4036-8d08-b013fdc52650",
                    "leftValue": "={{ $('Get_info').item.json.file_type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "photo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -7040,
        1960
      ],
      "id": "e60297ba-11bf-4ccd-bcf5-7aa7d83ad98d",
      "name": "type_of_message1",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Get_info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Get_info').item.json.account_id}}/conversations/{{ $('Get_info').item.json.conversation_id }}/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "=Vejo que voc√™ enviou uma foto... poderia me descrever o que contem nela? n√£o consigo abrir no momento. "
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6800,
        2280
      ],
      "id": "e81ecbae-9931-41a2-b0f4-656f7074b944",
      "name": "HTTP Request4",
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2420,
        -200
      ],
      "id": "c09b44dd-c6aa-45db-a524-74ed8a753a36",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Get_Info').item.json.telefone }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -2240,
        -200
      ],
      "id": "09556b51-bffb-4650-bef7-12fc3b607bb3",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "9NX4pzKj08tSdXc1",
          "name": "Postgres PAES"
        }
      }
    },
    {
      "parameters": {
        "description": "Chame essa ferramenta para cadastrar um novo contato ap√≥s receber as informa√ß√µes dele. \n\nRetorne com sucesso. ",
        "workflowId": {
          "__rl": true,
          "value": "xEgqV510zHUaqWAY",
          "mode": "list",
          "cachedResultName": "cadastrar_contato"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "nome": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nome', ``, 'string') }}",
            "telefone": "={{ $('Get_info').item.json.telefone }}",
            "email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('email', ``, 'string') }}",
            "status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('status', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "nome",
              "displayName": "nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1940,
        -200
      ],
      "id": "d5e70144-47ac-4e53-a007-b3a79b19e695",
      "name": "cadastrar_contato"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "490c28ed-bd1e-4f29-8066-33819dbf9e2a",
              "name": "message",
              "value": "={{ $('Get_Info').item.json.message || $json.text || $json.content}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3900,
        1300
      ],
      "id": "162bbcf4-2de0-40be-ad42-13575b63b08d",
      "name": "message2"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Get_Info').item?.json.telefone }}",
        "messageData": "={{ $json.message }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3680,
        1300
      ],
      "id": "47739361-b9e8-48fd-8158-c8898526acb5",
      "name": "Redis4",
      "credentials": {
        "redis": {
          "id": "NhZVKhQf21wux2SS",
          "name": "Redis PAES"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Get_Info').item?.json.telefone }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3240,
        1300
      ],
      "id": "e1345c80-9260-423f-a774-278ac8e84ed6",
      "name": "Redis5",
      "credentials": {
        "redis": {
          "id": "NhZVKhQf21wux2SS",
          "name": "Redis PAES"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c9ceff29-3d8f-4f60-bb66-fb02d02a4875",
              "leftValue": "={{ $json.propertyName?.last() }}",
              "rightValue": "={{ $('message2').item.json.message }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3020,
        1320
      ],
      "id": "2fabe03e-a883-4844-8abe-e215b6f1b288",
      "name": "If3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2800,
        1420
      ],
      "id": "a6c170a1-af92-46b9-8631-85c8d78d572b",
      "name": "No Operation, do nothing6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10cd3441-87b6-4599-ad7b-1c3aff3faab9",
              "name": "text_message",
              "value": "={{ $('Redis5').item.json.propertyName.join(', ') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2800,
        1240
      ],
      "id": "aa4cd3f0-62fa-4714-a5e2-7e0a569fa613",
      "name": "join_messages2"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Get_Info').item.json.telefone }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2580,
        1240
      ],
      "id": "a094d881-d4a1-45f8-adfb-cdc6915305d8",
      "name": "clean2",
      "credentials": {
        "redis": {
          "id": "NhZVKhQf21wux2SS",
          "name": "Redis PAES"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -580,
        1400
      ],
      "id": "674c4679-4251-4790-ae40-409c01f5d97a",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -120,
        1580
      ],
      "id": "7b7cc11b-62cd-4846-a04b-4375f057edaa",
      "name": "Wait4",
      "webhookId": "d70c6ba0-aabf-4dbf-97a5-8a030c8cfeae"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6af4c483-5a9e-444c-a4a9-e5f2fdee1f5d",
              "name": "text",
              "value": "={{ $json.output.replace(/\\*/g, '').split('\\n\\n') }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1480,
        1240
      ],
      "id": "d78981af-4f31-4313-b4c8-5c520478e6b3",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "fieldToSplitOut": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -840,
        1240
      ],
      "id": "7260e224-87d4-4710-8ec5-ce69650e5ca8",
      "name": "Split Out2"
    },
    {
      "parameters": {
        "amount": 8
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3460,
        1300
      ],
      "id": "51a6c07f-cad6-4f6e-8235-528bd5bc73e9",
      "name": "Wait5",
      "webhookId": "e0002293-3b7d-40bf-90e8-ea434878bba1"
    },
    {
      "parameters": {
        "url": "={{ $('Get_info').item.json.audio_url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6740,
        1580
      ],
      "id": "298392b4-50ce-4df2-a1a9-0799215ed14e",
      "name": "download_audio2",
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -6540,
        1580
      ],
      "id": "5830421f-3323-4f83-8b1d-dbabffb8af32",
      "name": "transcribe_audio2",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -360,
        1280
      ],
      "id": "97887c98-64cf-4495-9f73-1fc980e782d8",
      "name": "No Operation, do nothing7"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "257ef35c-0705-4c83-b58e-683ca6607c93",
                    "leftValue": "={{ $('Get_info').item.json.message }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Get_info').item.json.audio_url }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "64451f87-a1da-4bf6-928c-ee41e884d829"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "54d70c63-a0f8-4036-8d08-b013fdc52650",
                    "leftValue": "={{ $('Get_info').item.json.photo_url }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "photo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -6980,
        1460
      ],
      "id": "3437197f-7c3d-4bc8-b68c-44be169507ae",
      "name": "type_of_message2",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Get_info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Get_info').item.json.account_id}}/conversations/{{ $('Get_info').item.json.conversation_id }}/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "=Vejo que voc√™ enviou uma foto... poderia me descrever o que contem nela? n√£o consigo abrir no momento. "
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6740,
        1780
      ],
      "id": "36a24481-c13c-433e-85eb-9b018149bb6c",
      "name": "HTTP Request8",
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "paes_contacts",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Get_info').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "ultimo_contato",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1180,
        1400
      ],
      "id": "7e37ac6b-8cba-48c2-a262-7c8f93bead81",
      "name": "Update a row2",
      "credentials": {
        "supabaseApi": {
          "id": "NaykEDQV12GNNguL",
          "name": "Supabase PAES"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2380,
        1500
      ],
      "id": "a25c56d0-2a03-43db-a8da-965fcb7a5667",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Get_Info').first().json.telefone }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -2220,
        1500
      ],
      "id": "af1b7665-13b3-432b-9cf4-598f08770135",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "9NX4pzKj08tSdXc1",
          "name": "Postgres PAES"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "paes",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5580,
        1080
      ],
      "id": "b1ae0482-a728-4688-985f-28b774c9c45b",
      "name": "Webhook1",
      "webhookId": "e048a3f9-af9c-4165-9df2-d18abcfbc8dd"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use para buscar informa√ß√µes na planilha. ",
        "documentId": {
          "__rl": true,
          "value": "1yOBioGs7NGVv9hP3FKnaQIH6fIE5-M9qPcl8wC12HX0",
          "mode": "list",
          "cachedResultName": "base_paes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yOBioGs7NGVv9hP3FKnaQIH6fIE5-M9qPcl8wC12HX0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1093232994,
          "mode": "list",
          "cachedResultName": "Planilha1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yOBioGs7NGVv9hP3FKnaQIH6fIE5-M9qPcl8wC12HX0/edit#gid=1093232994"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -3760,
        3380
      ],
      "id": "5172a679-13ee-4226-9ba9-d7fba954cad0",
      "name": "Treinamento_base_feito",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GACkw8xs4zKWnLvv",
          "name": "Google Sheets PAES"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Analise se j√° existe uma coluna parecida. Se sim, atualize ela. Se n√£o, crie uma linha nova. ",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1yOBioGs7NGVv9hP3FKnaQIH6fIE5-M9qPcl8wC12HX0",
          "mode": "list",
          "cachedResultName": "base_paes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yOBioGs7NGVv9hP3FKnaQIH6fIE5-M9qPcl8wC12HX0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1093232994,
          "mode": "list",
          "cachedResultName": "Planilha1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yOBioGs7NGVv9hP3FKnaQIH6fIE5-M9qPcl8wC12HX0/edit#gid=1093232994"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Tag": "={{ $fromAI('Tag__using_to_match_', ``, 'string') }}",
            "Texto": "={{ $fromAI('Texto', ``, 'string') }}",
            "Funcao": "={{ $fromAI('Funcao', ``, 'string') }}"
          },
          "matchingColumns": [
            "Tag"
          ],
          "schema": [
            {
              "id": "Tag",
              "displayName": "Tag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Texto",
              "displayName": "Texto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Funcao",
              "displayName": "Funcao",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -3580,
        3380
      ],
      "id": "1b119929-cc37-4dca-9dfd-393dd5230b8a",
      "name": "Atualizar_treinamento_base",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GACkw8xs4zKWnLvv",
          "name": "Google Sheets PAES"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Fun√ß√£o para o seu Function/Code node em n8n (Modo: Run Once for Each Item)\n// Este c√≥digo processa datas em portugu√™s e converte para ISO 8601\n// Formatos suportados:\n// - \"24 de Julho\" (data √∫nica)\n// - \"5 a 7 de Setembro de 2025\" (intervalo no mesmo m√™s)\n// - \"30 de Outubro a 2 de Novembro de 2025\" (intervalo entre meses)\n\nconst monthMap = {\n  janeiro:   0,  fevereiro: 1,  mar√ßo:     2,  abril:   3,\n  maio:      4,  junho:     5,  julho:     6,  agosto:  7,\n  setembro:  8,  outubro:   9,  novembro:  10,  dezembro:11\n};\n\n// helpers\n\n/** Tenta casar intervalos completos (mesmo m√™s ou entre meses). */\nfunction parseRangeString(txt) {\n  const dates = {};\n  // 1) Intervalo entre meses, ex: \"30 de Outubro a 2 de Novembro de 2025\"\n  const reFull = /(\\d{1,2})\\s*(?:de)?\\s*([a-z√ß]+)(?:\\s*de\\s*(\\d{4}))?\\s*(?:a|at√©|√†)\\s*(\\d{1,2})\\s*(?:de)?\\s*([a-z√ß]+)\\s*de\\s*(\\d{4})/i;\n  let m = txt.match(reFull);\n  if (m) {\n    const [ , d1, m1, y1opt, d2, m2, y2 ] = m;\n    const y1  = y1opt || y2;\n    const dt1 = new Date(Date.UTC(Number(y1), monthMap[m1], Number(d1)));\n    const dt2 = new Date(Date.UTC(Number(y2), monthMap[m2], Number(d2)));\n    if (!isNaN(dt1) && !isNaN(dt2)) {\n      dates.start = dt1.toISOString();\n      dates.end   = dt2.toISOString();\n      return dates;\n    }\n  }\n  // 2) Intervalo mesmo m√™s, ex: \"5 a 7 de Setembro de 2025\"\n  const reSameMonth = /(\\d{1,2})\\s*(?:de)?\\s*([a-z√ß]+)(?:\\s*de\\s*(\\d{4}))?\\s*(?:a|at√©|√†)\\s*(\\d{1,2})/i;\n  m = txt.match(reSameMonth);\n  if (m) {\n    const [ , d1, mo, yopt, d2 ] = m;\n    const year = yopt ? Number(yopt) : new Date().getFullYear();\n    const mon  = monthMap[mo];\n    const dt1  = new Date(Date.UTC(year, mon, Number(d1)));\n    const dt2  = new Date(Date.UTC(year, mon, Number(d2)));\n    if (!isNaN(dt1) && !isNaN(dt2)) {\n      dates.start = dt1.toISOString();\n      dates.end   = dt2.toISOString();\n      return dates;\n    }\n  }\n  return dates;\n}\n\n/** Tenta casar data √∫nica \"dia [de] m√™s [de ano]?\" */\nfunction parseDateString(txt) {\n  const reSingle = /(\\d{1,2})\\s*(?:de)?\\s*([a-z√ß]+)(?:\\s*de\\s*(\\d{4}))?/i;\n  const m = txt.toLowerCase().match(reSingle);\n  if (!m) return null;\n  const d    = Number(m[1]);\n  const mon  = monthMap[m[2]];\n  const year = m[3] ? Number(m[3]) : new Date().getFullYear();\n  const dt   = new Date(Date.UTC(year, mon, d));\n  return isNaN(dt) ? null : dt.toISOString();\n}\n\n// --- c√≥digo principal ---\n\n// pega o JSON do item\nconst itemJson    = $input.item.json;\nconst dataInicio  = itemJson[\"Data inicio\"];\nconst dataFinal   = itemJson[\"Data final\"];\n\nlet startDate = null;\nlet endDate   = null;\n\n// 1) Se Data inicio existir, tenta primeiro um intervalo nela\nif (dataInicio) {\n  const range = parseRangeString(dataInicio);\n  if (range.start) {\n    startDate = range.start;\n    endDate   = range.end;\n  }\n  // 2) Se n√£o veio intervalo, tenta data √∫nica em Data inicio\n  if (!startDate) {\n    const single = parseDateString(dataInicio);\n    if (single) {\n      startDate = single;\n      endDate   = single;\n    }\n  }\n}\n\n// 3) Se Data final existir, faz override em endDate\nif (dataFinal) {\n  const finalParsed = parseDateString(dataFinal);\n  if (finalParsed) {\n    endDate = finalParsed;\n    // se ainda n√£o tiver startDate (por algum motivo), define igual\n    if (!startDate) startDate = finalParsed;\n  }\n}\n\n// devolve o item com start_date e end_date preenchidos\nreturn {\n  json: {\n    ...itemJson,\n    start_date: startDate,\n    end_date:   endDate,\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2120,
        3240
      ],
      "id": "5c6ff797-5709-47a8-a3ea-c44b371380c5",
      "name": "parse_date"
    },
    {
      "parameters": {
        "jsCode": "// C√ìDIGO MELHORADO PARA N8N - Especializado para dados JSON estruturados\n// Cola este c√≥digo no lugar do anterior\n\nfunction splitTextSmart(text, maxChars = 18000, overlapChars = 600) {\n  if (text.length <= maxChars) {\n    return [text];\n  }\n  \n  // Tenta primeiro detectar se √© JSON de c√©lulas/eventos\n  let isStructuredJSON = false;\n  try {\n    const parsed = JSON.parse(text);\n    if (Array.isArray(parsed) && parsed.length > 0) {\n      isStructuredJSON = true;\n      \n      // Para dados estruturados, divide por itens completos\n      return splitByJSONItems(parsed, maxChars);\n    }\n  } catch (e) {\n    // N√£o √© JSON v√°lido, usa divis√£o normal\n  }\n  \n  // Divis√£o normal para texto n√£o estruturado\n  const chunks = [];\n  let start = 0;\n  \n  while (start < text.length) {\n    let end = start + maxChars;\n    \n    if (end < text.length) {\n      // Pontos de quebra em ordem de prioridade (melhorados para JSON)\n      const breakPoints = [\n        '},{',      // Entre objetos JSON\n        '\\n\\n',     // Quebra dupla\n        '\\n',       // Quebra simples  \n        '\"},',      // Final de propriedade JSON\n        '. ',       // Final de frase\n        ', ',       // V√≠rgula\n        ' '         // Espa√ßo\n      ];\n      \n      for (const breakPoint of breakPoints) {\n        const lastBreak = text.lastIndexOf(breakPoint, end);\n        if (lastBreak > start + (maxChars * 0.6)) { // 60% m√≠nimo do chunk\n          end = lastBreak + breakPoint.length;\n          break;\n        }\n      }\n    }\n    \n    chunks.push(text.slice(start, end).trim());\n    start = Math.max(start + maxChars - overlapChars, end - overlapChars);\n  }\n  \n  return chunks.filter(chunk => chunk.length > 0);\n}\n\nfunction splitByJSONItems(jsonArray, maxChars) {\n  const chunks = [];\n  let currentChunk = [];\n  let currentSize = 0;\n  \n  for (const item of jsonArray) {\n    const itemStr = JSON.stringify(item);\n    const itemSize = itemStr.length;\n    \n    // Se um item sozinho j√° √© muito grande, divide ele\n    if (itemSize > maxChars) {\n      if (currentChunk.length > 0) {\n        chunks.push(JSON.stringify(currentChunk));\n        currentChunk = [];\n        currentSize = 0;\n      }\n      // Divide o item grande usando a divis√£o normal\n      const itemChunks = splitTextSmart(itemStr, maxChars, 200);\n      chunks.push(...itemChunks);\n      continue;\n    }\n    \n    // Se adicionar este item ultrapassar o limite, finaliza o chunk atual\n    if (currentSize + itemSize > maxChars && currentChunk.length > 0) {\n      chunks.push(JSON.stringify(currentChunk));\n      currentChunk = [item];\n      currentSize = itemSize;\n    } else {\n      currentChunk.push(item);\n      currentSize += itemSize;\n    }\n  }\n  \n  // Adiciona o √∫ltimo chunk se houver\n  if (currentChunk.length > 0) {\n    chunks.push(JSON.stringify(currentChunk));\n  }\n  \n  return chunks;\n}\n\n// === PARTE PRINCIPAL (igual ao anterior) ===\n\n// Pega o texto de entrada - VERS√ÉO ROBUSTA para m√∫ltiplas fontes\nlet inputText = '';\n\nif ($json.concatenated_data) {\n  inputText = $json.concatenated_data;\n} else if ($json.data) {\n  inputText = typeof $json.data === 'string' ? $json.data : JSON.stringify($json.data);\n} else if ($json.text) {\n  inputText = $json.text;\n} else if (typeof $json === 'string') {\n  inputText = $json;\n} else if ($json.content) {\n  inputText = $json.content;\n} else {\n  inputText = JSON.stringify($json);\n}\n\n// Divide o texto em chunks seguros COM L√ìGICA MELHORADA\nconst chunks = splitTextSmart(inputText);\n\n// Log para debug\nconsole.log('Processamento:', {\n  tamanho_original: inputText.length,\n  chunks_criados: chunks.length,\n  tipo_detectado: inputText.startsWith('[') ? 'JSON Array' : 'Texto',\n  tamanho_chunks: chunks.map(c => c.length)\n});\n\n// Retorna os chunks para o Default Data Loader\nreturn chunks.map((chunk, index) => ({\n  data: chunk,\n  chunk_number: index + 1,\n  total_chunks: chunks.length,\n  chunk_size: chunk.length\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1220,
        3220
      ],
      "id": "d8612dda-4180-4062-b53a-dfe7c98fa444",
      "name": "chunck_splitter"
    },
    {
      "parameters": {
        "description": "chame essa ferramentea para notifcar o time interno. A ferrmaenta retornar√° com sucesso",
        "workflowId": {
          "__rl": true,
          "value": "kvBFWbzubIRlhLG1",
          "mode": "list",
          "cachedResultName": "notificar_time_interno"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "nome": "={{ $('Check_lead').item.json.nome_completo }}",
            "telefone": "={{ $('Check_lead').item.json.telefone }}",
            "tipo_situacao": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('tipo_situacao', ``, 'string') }}",
            "prioridade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prioridade', ``, 'string') }}",
            "equipe_responsavel": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('equipe_responsavel', ``, 'string') }}",
            "detalhes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('detalhes', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "tipo_situacao",
              "displayName": "tipo_situacao",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "prioridade",
              "displayName": "prioridade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "equipe_responsavel",
              "displayName": "equipe_responsavel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "nome",
              "displayName": "nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "detalhes",
              "displayName": "detalhes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1720,
        1700
      ],
      "id": "afbb6bbc-c2ee-451b-a23c-a4524d19ffaa",
      "name": "notificar_time_interno"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('join_messages2').item.json.text_message }}",
        "options": {
          "systemMessage": "=Hoje √©:  {{ $now.setZone(\"America/Sao_Paulo\").toFormat(\"FFFF\") }}\n\nnome do usu√°rio: {{ $('Check_lead').item.json.nome_completo }}\ntelefone do usu√°rio:{{ $('Check_lead').item.json.telefone }}\n\n#  LidIA - Assistente Virtual da PAES\n\n## üö® REGRAS CR√çTICAS\n1. Qualquer pergunta sobre **hor√°rios, dias, datas, agenda, eventos, cultos ou c√©lulas**:\n   - √â OBRIGAT√ìRIO chamar o tool **\"buscar_documentos\"** antes de responder.\n   - Se o tool n√£o retornar dado suficiente, diga que vai encaminhar e acione a notifica√ß√£o (sem inventar informa√ß√µes).\n   - √â PROIBIDO responder com estimativas, ‚Äúgeralmente‚Äù, ‚Äúnormalmente‚Äù ou similares sem resultado do tool.\n\n2. Ao detectar um gatilho para notifica√ß√£o interna:\n   - Chame o tool **\"notificar_time_interno\"** usando os campos exigidos.\n   - **NUNCA** exiba o conte√∫do da chamada do tool ao usu√°rio.\n   - Ap√≥s a chamada, envie apenas a confirma√ß√£o amig√°vel (sem JSON ou c√≥digo).\n\n---\n\n## üëã **Identidade**\nVoc√™ √© **LidIA**, a assistente virtual da Par√≥quia Anglicana Esp√≠rito Santo (PAES). Sua miss√£o √©:\n- Acolher e conectar pessoas a Jesus e √† comunidade PAES\n- Fornecer informa√ß√µes precisas e atualizadas\n- Encaminhar adequadamente para atendimento humano quando necess√°rio\n- Ser uma ferramenta mission√°ria eficaz\n\n### **IMPORTANTE: Voc√™ APENAS responde sobre:**\n- ‚úÖ Atividades, eventos e programa√ß√µes da PAES\n- ‚úÖ Minist√©rios e c√©lulas da igreja\n- ‚úÖ Informa√ß√µes sobre cultos e celebra√ß√µes\n- ‚úÖ Agendamentos pastorais e sacramentos\n- ‚úÖ D√≠zimos, ofertas e contribui√ß√µes para a PAES\n- ‚úÖ Pedidos de ora√ß√£o e aconselhamento pastoral\n- ‚úÖ Quest√µes de f√© relacionadas ao contexto anglicano\n- ‚úÖ Como se conectar e participar da comunidade PAES\n\n### **Voc√™ N√ÉO responde sobre:**\n- ‚ùå Produtos comerciais (celulares, eletr√¥nicos, roupas, etc.)\n- ‚ùå Servi√ßos n√£o relacionados √† igreja\n- ‚ùå Pol√≠tica partid√°ria\n- ‚ùå Assuntos m√©dicos espec√≠ficos (apenas ora√ß√£o por sa√∫de)\n- ‚ùå Consultoria financeira pessoal\n- ‚ùå Quest√µes jur√≠dicas\n- ‚ùå Entretenimento secular\n- ‚ùå Qualquer tema n√£o relacionado √† PAES\n\n### **Resposta Padr√£o para Perguntas Fora do Escopo:**\nOl√° [Nome]! üòä\n\nEu estou aqui exclusivamente para ajudar com assuntos relacionados √† nossa igreja e comunidade de f√©.\n\nN√£o posso ajudar com [tema mencionado], mas adoraria te auxiliar com:\n\nüìÖ Agenda e eventos da igreja\nüôå Servir em um minist√©rio\nüè† C√©lulas\n‚ù§Ô∏è Decis√µes espirituais\nüí∞ D√≠zimos e ofertas\n‚ùì D√∫vidas sobre a PAES\nüìÜ Agendamentos pastorais\n\nComo posso te ajudar hoje com a vida na nossa comunidade?\n\n## üéØ **Tom e Comportamento**\n- **Sempre calorosa, acolhedora e pastoral**\n- Use linguagem natural e conversacional\n- Demonstre genu√≠no interesse pela pessoa\n- Use o nome da pessoa sempre que poss√≠vel\n- Seja proativa em oferecer ajuda\n- Emojis com modera√ß√£o para engajamento\n\n## üìã **Menu Principal (Oferecer Frequentemente)**\n\n### **Mensagem de Boas-vindas**\nOl√° [Nome]! Eu sou a LidIA, assistente da PAES! üòä\n\nComo posso te ajudar hoje?\n\nüìã Posso te auxiliar com:\n\nüìÖ Agenda e eventos da igreja\nüôå Servir em um minist√©rio\nüè† C√©lulas\n‚ù§Ô∏è Tomei uma decis√£o, aceitei Jesus\nüí∞ D√≠zimos e ofertas (PIX/Dep√≥sito/Transfer√™ncia)\n‚ùì Tirar d√∫vidas\nüìÜ Agendar apresenta√ß√£o familiar, batismo ou casamento\n‚ÑπÔ∏è Outras informa√ß√µes\n\nMe conte o que precisa!\n\n### **Ofertar Menu Regularmente**\nA cada 2-3 intera√ß√µes, use uma dessas varia√ß√µes:\n- \"Gostaria de saber sobre outras atividades da PAES?\"\n- \"Posso te ajudar com mais alguma coisa do nosso menu?\"\n- \"Quer conhecer outros servi√ßos que oferecemos?\"\n\n---\n\n## üö® **SISTEMA DE NOTIFICA√á√ïES**\n\n**EXEMPLO DE A√á√ÉO INTERNA**  \nQuando detectar um gatilho, executar a seguinte a√ß√£o:  \nChamar o tool 'notificar_time_interno' com:  \n- tipo_situacao = ...  \n- prioridade = ...  \n- equipe_responsavel = ...  \n- detalhes = ...\n\n** N√£o envie isso para o usu√°rio, somente interenamente para a ferramenta 'notificar_time_interno'.\n\n### Lista de Gatilhos\n- **Decis√µes espirituais** ‚≠ê CR√çTICA ‚Üí ‚Äútomei uma decis√£o‚Äù, ‚Äúaceitei Jesus‚Äù, ‚Äúquero me converter‚Äù | equipe: Pastoral  \n- **Pedidos de ora√ß√£o** üôè ALTA  ‚Üí ‚Äúpedido de ora√ß√£o‚Äù, ‚Äúorem por mim‚Äù, ‚Äúpreciso de ora√ß√£o‚Äù | equipe: Intercess√£o  \n- **Agendamentos** üìÖ NORMAL ‚Üí apresenta√ß√£o familiar, gabinete pastoral, batismo, casamento | equipe: Secretaria Pastoral  \n- **Minist√©rios** üôå NORMAL ‚Üí interesse em servir em qualquer minist√©rio | equipe: L√≠der do Minist√©rio + Coordena√ß√£o  \n- **C√©lulas** üë• NORMAL ‚Üí interesse em participar de c√©lulas | equipe: Coordena√ß√£o de C√©lulas  \n- **Visitas guiadas** üèõÔ∏è ALTA ‚Üí ‚Äúconhecer a igreja‚Äù, ‚Äúvisita guiada‚Äù, ‚Äúprimeira vez‚Äù | equipe: Recep√ß√£o e Integra√ß√£o  \n- **Situa√ß√µes sens√≠veis** üÜò CR√çTICA ‚Üí ‚Äúdepress√£o‚Äù, ‚Äúcrise‚Äù, ‚Äúemerg√™ncia‚Äù, ‚Äúurgente‚Äù | equipe: Pastoral + Aconselhamento  \n- **Reclama√ß√µes/Problemas** ‚ö†Ô∏è ALTA ‚Üí ‚Äúreclama√ß√£o‚Äù, ‚Äúproblema‚Äù, ‚Äúinsatisfeito‚Äù, ‚Äúerro‚Äù | equipe: Coordena√ß√£o Geral  \n- **Suporte administrativo** üîß NORMAL ‚Üí ‚Äúequipe de apoio‚Äù, ‚Äúproblema t√©cnico‚Äù, ‚Äúfalar com secretaria‚Äù | equipe: Administra√ß√£o  \n\n### Ap√≥s TODA notifica√ß√£o, confirme:\n‚úì Registrado com sucesso!\nüì± Voc√™ receber√° contato da equipe respons√°vel via WhatsApp!\nGostaria de saber sobre outras atividades da PAES?\n\n---\n\n## üìù **Fluxo de Respostas por Categoria**\n\n### **1Ô∏è‚É£ Agenda e Eventos** \nüóìÔ∏è Cultos Regulares:\nANTES de responder, √© OBRIGAT√ìRIO chamar buscar_documentos para hor√°rios atualizados.\n\nüéâ Pr√≥ximos Eventos:\nANTES de responder, √© OBRIGAT√ìRIO chamar buscar_documentos para eventos atualizados.\n‚ö†Ô∏è SEMPRE verificar se evento j√° passou comparando com data atual.\n\nGostaria de detalhes sobre algum evento espec√≠fico?\n\n### **2Ô∏è‚É£ Servir em Minist√©rio**\nQue alegria saber que voc√™ quer servir! üôå\n\n**Minist√©rios dispon√≠veis:**\n\nüå∏ Rede de Mulheres\n- Feminina üå∑\n- D√©boras üë©‚Äçü¶≥\n- Sodal√≠cio üë≠\n- Dorcas üß∫\n- Jovens de Honra üëë\n- Esta√ß√µes üçÇ\n\n‚úùÔ∏è Evangelismo e Miss√£o\n- Cursilho Masculino e Feminino üôèüèΩ\n- Crosswords üåê\n- Happening üéâ\n- Cais ‚öì\n\nüëßüë¶ Infantil e Jovem\n- Arca Kids üßí\n- Arca Junior üéà\n- Arca üõ∂\n- Arca+ üöÄ\n\nüéµ Base de Adora√ß√£o\n- Louvor üé∏\n- Fluir üïä\n\n‚ù§Ô∏è Vida Crist√£\n- 30 Semanas üìÖ\n- C√©lulas üå±\n\nüíç Casais\n- Casais üíç\n- Mentoreio de Casais üßë‚Äçü§ù‚Äçüßë\n- Miss√£o Noivos üíå\n\nüôå Equipes de Servi√ßo de Culto\n- Sagrado Store (Livraria) üìñ\n- Apoio Pastoral ü§ù\n- Acolher üíû\n- Decis√£o ‚úÖ\n- Ordem de Culto üï∞Ô∏è\n\nüôè Forma√ß√£o e Crescimento Espiritual\n- Semin√°rio de Vida no Esp√≠rito Santo üî•üïä\n- Reconstruir üß±\n- C√©us Abertos üå§\n\nüí° Tecnologia\n- Proje√ß√£o üìΩ\n- Som üîä\n- Transmiss√£o üé•\n- Ilumina√ß√£o üí°\n- Comunica√ß√£o üì£\n- Qual toca seu cora√ß√£o?\n\n[Ap√≥s coletar resposta: usar notificar_time_interno]\n\n### **3Ô∏è‚É£ C√©lulas**\nüè† Que mararavilha, certamente temos uma c√©lula perto de voc√™!\nMe fala seu endere√ßo para conectar voc√™ √† c√©lula ideal!\n\n[Ap√≥s dados: usar 'notificar_time_interno']\n\n### **4Ô∏è‚É£ Tomei uma Decis√£o**\nüéâ QUE ALEGRIA IMENSA! O c√©u est√° em festa!\n\nEsta √© a decis√£o mais importante da sua vida!\nNossa equipe pastoral vai te acompanhar nessa\njornada maravilhosa.\n\n[OBRIGATORIAMENTE chamar a ferramenta notificar_time_interno e passar as informa√ß√µes necess√°rias]\n\n### **5Ô∏è‚É£ D√≠zimos e Ofertas**\nüíù Como Contribuir:\n\nüì± PIX: paespiedade@gmail.com\nüè¶ Transfer√™ncia/Dep√≥sito:\n\nBanco: Santander (033)\n\nAg√™ncia: 3749\n\nC/C: 13003562-7\n\nCNPJ: 05.052.856/0001-24\n\nSua generosidade aben√ßoa muitas vidas e contribui para a expans√£o do Reino!\n\n### **6Ô∏è‚É£ Tirar D√∫vidas**\nClaro! Vou te ajudar com isso. \n**informe a resposta**\n\n[INSTRU√á√ÉO INTERNA: Antes de enviar qualquer resposta ao usu√°rio, √© **OBRIGAT√ìRIO** chamar a ferramenta 'buscar_documentos' para tentar encontrar a resposta.]\n\n[INSTRU√á√ÉO INTERNA: Se ap√≥s **2 tentativas** usando `buscar_documentos` n√£o houver resultado relevante, chamar a ferramenta 'notificar_time_interno' para acionar a equipe respons√°vel.]\n\n### **Agendar apresenta√ß√£o familiar, batismo ou casamento**\nPosso te ajudar com:\n‚Ä¢ üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Apresenta√ß√£o familiar\n‚Ä¢ üôè Conversa/aconselhamento pastoral\n‚Ä¢ üíß Batismo\n‚Ä¢ üíí Casamento\n\nO que voc√™ gostaria de agendar?\n\n#### Pergunte detalhes sobre o agendamento, qual o tema e qual a data desejada para agendamento. \n#### Se for para batismo ou apresenta√ß√£o familiar, pergunte qual o nome da pessoa. \n#### Se for casamento, pergunte o nome do casal e a data desejada. \n#### Se for mais de um assunto, trate um de cada vez. Pois voc√™ provavelmente vai precisar notificar times diferentes. Use sua janela de contexto para gerenciar isso.\n\n\n[Ap√≥s coletar dados do que e para quando o usu√°rio gostaria de agendar, chame a ferramenta 'notificar_time_interno']\n\n### **Outras Informa√ß√µes**\nMe conte melhor sobre o que voc√™ precisa!\nEstou aqui para ajudar no que for necess√°rio.\n\n[Se for algo que n√£o consigo resolver:]\nVou encaminhar sua d√∫vida para a equipe adequada!\n[usar notificar_time_interno se necess√°rio]\n\n---\n\n## ‚ö†Ô∏è **Regras Importantes**\n### **Sobre Eventos:**\n1. **SEMPRE** verificar data do evento vs. data atual.\n2. Se evento j√° passou: \"Esse evento j√° aconteceu, mas temos outros pr√≥ximos!\"\n3. **NUNCA** inventar informa√ß√µes sobre eventos.\n4. Se n√£o tiver informa√ß√£o: usar `buscar_documentos` ou encaminhar para equipe.\n5. N√£o envie para o usu√°rio as informa√ß√µes que vai manda para a ferramenta 'notificar_time_interno'\n\n### **Coleta de Dados:**\n1. **N√£o repetir** perguntas j√° feitas na mesma sess√£o.\n\n### **Casos Especiais:**\n- **Visitantes primeira vez**: Extra aten√ß√£o e acolhimento.\n- **Membros antigos**: Reconhecer e valorizar v√≠nculo.\n- **Situa√ß√µes urgentes**: Priorizar e escalar rapidamente.\n\n---\n\n## üîÑ **Controle de Qualidade**\nAntes de cada resposta:\n- Tom acolhedor e pastoral.\n- Informa√ß√£o precisa (usar `buscar_documentos`).\n- Notifica√ß√£o enviada se necess√°rio.\n- Confirma√ß√£o clara ao usu√°rio.\n- Oferta de ajuda adicional.\n\n### **Despedida padr√£o:**\nFoi √≥timo conversar com voc√™, [Nome]!\nSe precisar de mais alguma coisa, estarei aqui.\n\nQue Deus aben√ßoe grandemente seu dia! üôè‚ú®\n\n[Lembrete de pr√≥ximo evento relevante se houver]\n\n---\n\n### **Antes de responder, sempre verifique:**\n1. **A pergunta √© sobre a PAES ou vida crist√£ na comunidade?**\n   - SIM ‚Üí Prosseguir com resposta completa.\n   - N√ÉO ‚Üí Usar resposta padr√£o de redirecionamento.\n\n2. **Exemplos de redirecionamento educado:**\n   - Pergunta sobre celular ‚Üí \"N√£o posso ajudar com produtos eletr√¥nicos, mas posso te contar sobre nossos minist√©rios!\"\n   - Pergunta sobre pol√≠tica ‚Üí \"Meu foco √© a vida espiritual na PAES. Que tal conhecer nossas c√©lulas?\"\n   - Pergunta sobre investimentos ‚Üí \"Falo apenas sobre contribui√ß√µes para a igreja. Posso explicar sobre d√≠zimos?\"\n\n3. **T√©cnica de Redirecionamento Suave:**\n   - Sempre agradecer o contato.\n   - Explicar brevemente sua fun√ß√£o espec√≠fica.\n   - Oferecer imediatamente o menu de op√ß√µes da PAES.\n   - Manter tom acolhedor e pastoral.\n\n---\n\n## üìå **Frases de Redirecionamento** (ADICIONAR COMO REFER√äNCIA R√ÅPIDA)\n1. \"Que interessante sua pergunta sobre [tema], mas minha especialidade √© conectar pessoas com a PAES! Posso te contar sobre...\"\n2. \"Entendo que voc√™ precisa de informa√ß√µes sobre [tema], mas eu fui criada especificamente para ajudar com a vida na nossa igreja. Que tal...\"\n3. \"Para [tema mencionado], voc√™ precisaria buscar outro tipo de ajuda. Mas se quiser saber sobre nossa programa√ß√£o...\"\n4. \"Meu cora√ß√£o √© servir a comunidade PAES! N√£o tenho informa√ß√µes sobre [tema], mas posso te ajudar com...\"\n5. \"Sou especializada apenas em assuntos da nossa igreja. Vamos falar sobre como voc√™ pode se conectar conosco?\"\n\n---\n\n**REGRA DE OURO:** Se n√£o est√° diretamente relacionado √† PAES, redirecione com amor e ofere√ßa o menu principal!\n\n---\n\n## üéØ **Lembre-se sempre:**\nCada intera√ß√£o √© uma oportunidade de demonstrar o amor de Cristo. Seja paciente, amorosa e prestativa. Voc√™ representa a PAES e pode ser o primeiro contato de algu√©m com nossa comunidade de f√©! \n\n**LidIA est√° aqui para servir com excel√™ncia! üíô**\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1940,
        1240
      ],
      "id": "c63858f9-3253-4a6f-af87-851416a75f36",
      "name": "LidIA",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4e5f158d-cc38-4829-97bf-af9e72e82122",
              "leftValue": "={{ $json.text }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1180,
        1100
      ],
      "id": "1b9a4cef-2cbf-486a-b84a-da4fe69a1b1b",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b6c3956f-835b-4b40-96b5-44100cc35576",
              "name": "=text",
              "value": "Tive algum problema aqui no meu whatsapp e n√£o consegui receber sua √∫ltima mensage. Voc√™ pode mandar novamente?",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -840,
        940
      ],
      "id": "7e26e180-a4a4-4e15-ae1f-7bf90126a314",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4e5f158d-cc38-4829-97bf-af9e72e82122",
              "leftValue": "={{ $json.text }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1600,
        -700
      ],
      "id": "ad5f2d50-4485-4055-a7d2-bb1cbc57472a",
      "name": "If4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b6c3956f-835b-4b40-96b5-44100cc35576",
              "name": "=text",
              "value": "Tive algum problema aqui no meu whatsapp e n√£o consegui receber sua √∫ltima mensage. Voc√™ pode mandar novamente?",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1260,
        -880
      ],
      "id": "857e60e8-8b0c-477a-afe9-aa60ba17e6be",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('join_messages1').item.json.text_message }}",
        "options": {
          "systemMessage": "=Hoje √©: Hoje √©: {{ $now.setZone(\"America/Sao_Paulo\").toFormat(\"cccc, dd 'de' LLLL 'de' yyyy\") }}\n\n\n# üïäÔ∏è LidIA, Assistente da PAES ‚Äì Cadastro e Menu de Op√ß√µes\n\nVoc√™ √© a assistente da **Par√≥quia Anglicana Esp√≠rito Santo (PAES)**. Sua fun√ß√£o √© acolher novos contatos pelo WhatsApp, coletar suas informa√ß√µes b√°sicas, realizar o cadastro no sistema e oferecer um menu com op√ß√µes de atendimento.\n\nUse sempre um tom amoroso e acolhedor. \n\n## IMPORTANTE! \nN√£o tire d√∫vidas e n√£o d√™ informa√ß√µes. A sua fun√ß√£o √© somente fazer o cadastro. Se algu√©m te fizer perguntas, sigas instru√ß√µes do Tratamento de Perguntas Antecipadas. \n\n---\n\n## Fluxo de Intera√ß√£o\n\n### 1. Boas-vindas\n\nAo receber um novo contato, envie uma mensagem acolhedora\n\nExemplo:\n> ‚ÄúOl√°! Seja bem-vindo(a) √† Par√≥quia Anglicana Esp√≠rito Santo! Para podermos acompanhar voc√™ da melhor forma, vamos fazer um cadastro r√°pido.‚Äù\n\n---\n\n### 2. Coleta de Dados\n\nPergunte claramente, **uma informa√ß√£o por vez**, ao usu√°rio:\n\n1. **Nome completo**\n   > ‚ÄúQual seu nome?‚Äù\n\n3. **E-mail** *(Opcional)*\n   > ‚ÄúPoderia me informar um e-mail para contato? (√â opcional, mas nos ajuda bastante!)‚Äù\n\n4. **Status**\n   > ‚ÄúVoc√™ j√° √© membro da nossa igreja ou est√° nos visitando?‚Äù \n---\n\n### üîÑ 3. Confirma√ß√£o dos Dados\n\nAp√≥s coletar os dados, envie uma mensagem de confirma√ß√£o ao usu√°rio!\n\n> ‚ÄúPor favor, confirme se as informa√ß√µes abaixo est√£o corretas:  \n>   \n> **Nome:** [nome informado]  \n> **Telefone:** {{ $('Webhook1').item.json.body.phone }}\n> **E-mail:** [e-mail informado ou ‚Äòn√£o informado‚Äô]  \n> **Status:** [membro ou visitante]  \n>   \n> Est√° tudo certo?‚Äù\n\"\n- Se usu√°rio responder ‚Äún√£o‚Äù, pergunte qual dado precisa ser ajustado e corrija antes de seguir adiante.\n\n---\n\n### 4. Cadastro no Sistema\n\nAp√≥s confirma√ß√£o positiva do usu√°rio, chame a ferramenta cadastrar_contato e preencha os campos:\n\n{\n  \"nome\": \"\",\n  \"email\": \"\",\n  \"status\": \"\",\n}\n\n### 5. Conclus√£o e Apresenta√ß√£o do Menu\nAp√≥s realizar o cadastro, envie uma mensagem acolhedora de conclus√£o e imediatamente apresente o Menu Principal:\n\n‚Äú‚úÖ Cadastro conclu√≠do!\nFicamos muito felizes em ter voc√™ conosco. Que Deus te aben√ßoe!\n\nComo posso te ajudar agora? Voc√™ deseja falar sobre:\n\nüìÖ Agenda e eventos da igreja\nüí¨ Tirar d√∫vidas\nüôå Servir em um minist√©rio\nüóìÔ∏è Agendar gabinete pastoral, batismo ou casamento\nüì© Outras informa√ß√µes\n‚úã Tomei uma decis√£o\n‚úùÔ∏è Aceitei Jesus\n\n---\n\n**Observa√ß√£o importante**:  \n\n### Tratamento de Perguntas Antecipadas\nSe o usu√°rio chegar fazendo uma pergunta espec√≠fica (em vez de s√≥ dizer \"oi\"):\n\n**Reconhe√ßa a pergunta:**\n   > \"Oi! Vi que voc√™ tem uma pergunta sobre [tema]. Vou te ajudar com isso sim! \n   > Mas primeiro, para eu poder te atender da melhor forma, preciso fazer um cadastro r√°pido. \n   > Depois eu respondo sua pergunta, combinado?\"\n\n\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -2220,
        -500
      ],
      "id": "0d2f4fad-4f16-45c7-b795-917fb04b3bb5",
      "name": "LidIA _cadastro"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "insert into wa_paes.inbound_messages (message_id, chat_id, phone, payload)\nselect\n  ($1::jsonb ->> 'messageId')                              as message_id,\n  coalesce($1::jsonb ->> 'chatLid', $1::jsonb ->> 'phone') as chat_id,\n  ($1::jsonb ->> 'phone')                                  as phone,\n  $1::jsonb                                                as payload\nwhere ($1::jsonb ->> 'messageId') is not null\non conflict (message_id) do nothing\nreturning\n  message_id,\n  ($1::jsonb ->> 'phone')   as phone,\n  ($1::jsonb ->> 'chatLid') as chatId,\n  $1::jsonb                 as payload;\n",
        "options": {
          "queryReplacement": "={{ JSON.stringify($json.body ?? $json) }}\n"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5060,
        260
      ],
      "id": "81c5f058-bb6a-4b4e-b8d1-619474518624",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "9NX4pzKj08tSdXc1",
          "name": "Postgres PAES"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f2b947a2-569f-472f-a734-0fc8bc982655",
              "name": "messageId",
              "value": "={{ $('Webhook1').item.json.body.body.messageId }}",
              "type": "string"
            },
            {
              "id": "0540c82e-8ba7-4541-8822-f2f02454d7ac",
              "name": "chatId",
              "value": "={{ $('Webhook1').item.json.body.body.chatLid }}",
              "type": "string"
            },
            {
              "id": "3ded09ae-5e55-4323-b0e6-e3dcc730d3eb",
              "name": "phone",
              "value": "={{ $('Webhook1').item.json.body.body.phone }}",
              "type": "string"
            },
            {
              "id": "5b6a723e-bb39-4f87-9f24-61e9a487c0ea",
              "name": "text",
              "value": "={{$('Webhook1').item.json.body.text?.message || ''}}",
              "type": "string"
            },
            {
              "id": "1c2b8476-6f05-4d73-87cd-49da1dda9b32",
              "name": "timestamp",
              "value": "={{ $('Webhook1').item.json.body.body.momment }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5300,
        260
      ],
      "id": "dabf26d8-cb49-4c55-abfc-9b1a922b2e7b",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://apistart03.megaapi.com.br/rest/sendMessage/megastart-MEEcSxgl08E/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer MEEcSxgl08E"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messageData\": {\n    \"to\": \"557193061031@s.whatsapp.net\",\n    \"text\": \"{{$json.payload.text?.message || 'OK'}}\"\n  }\n}\n",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4820,
        260
      ],
      "id": "ad5553c0-655e-4504-bea2-16404b646fb4",
      "name": "digitando4",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "update wa_paes.inbound_messages\nset sent_at = now(),\n    send_status = $2\nwhere message_id = $1;\n",
        "options": {
          "queryReplacement": "={{ [ $json.message_id || $json.messageId, $json.statusCode || 200 ] }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4600,
        260
      ],
      "id": "8f4043f9-22d2-41b1-ba23-5881a6aafc58",
      "name": "Execute a SQL query1",
      "credentials": {
        "postgres": {
          "id": "9NX4pzKj08tSdXc1",
          "name": "Postgres PAES"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "audio",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -3500,
        1520
      ],
      "id": "b1e22436-f5bb-44b1-87a8-9771690b62f7",
      "name": "transcribe_audio",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('Get_Info').item.json.image_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          },
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3900,
        1720
      ],
      "id": "aad73705-18fb-41be-88c1-b9d38236f020",
      "name": "download_image",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "text": "descreva a imagem",
        "inputType": "base64",
        "binaryPropertyName": "image",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -3500,
        1720
      ],
      "id": "db91f00d-60db-4fb0-b7c7-93c8f32a3797",
      "name": "describe_image",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "257ef35c-0705-4c83-b58e-683ca6607c93",
                    "leftValue": "={{ $('Get_Info').item.json.tipo }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Get_Info').item.json.tipo }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "64451f87-a1da-4bf6-928c-ee41e884d829"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "54d70c63-a0f8-4036-8d08-b013fdc52650",
                    "leftValue": "={{ $('Get_Info').item.json.tipo }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "photo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3b3da044-f68e-48ec-a374-85593565dfc0",
                    "leftValue": "={{ $('Get_Info').item.json.tipo }}",
                    "rightValue": "documentMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3920,
        2140
      ],
      "id": "4288ddd9-c26e-40cd-8edf-21c1122b4b9f",
      "name": "type_of_message"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node ‚Äî decrypt WhatsApp .enc (sem Merge)\n// Entrada esperada no MESMO item:\n//  - json.mediaKey   (do seu Get_Info / Set)\n//  - json.mimetype   (opcional)\n//  - binary.data     (do HTTP Request ‚Üí Response=File, Binary Property=data)\n// Sa√≠da: binary.audio (.ogg) pronto para o OpenAI Transcribe\n\nconst crypto = require('crypto');\n\n// HKDF-SHA256 manual (Extract + Expand)\nfunction hkdf(mediaKeyB64, infoStr, length) {\n  const ikm  = Buffer.from(mediaKeyB64, 'base64');\n  const salt = Buffer.alloc(32, 0);\n  const prk  = crypto.createHmac('sha256', salt).update(ikm).digest();\n  const info = Buffer.from(infoStr, 'utf8');\n  let t = Buffer.alloc(0), okm = Buffer.alloc(0), c = 1;\n  while (okm.length < length) {\n    t = crypto.createHmac('sha256', prk)\n      .update(Buffer.concat([t, info, Buffer.from([c])]))\n      .digest();\n    okm = Buffer.concat([okm, t]);\n    c++;\n  }\n  return okm.slice(0, length);\n}\n\nfunction deriveKeys(mediaKeyB64) {\n  const okm = hkdf(mediaKeyB64, 'WhatsApp Audio Keys', 112);\n  return {\n    iv:        okm.slice(0, 16),\n    cipherKey: okm.slice(16, 48),\n    macKey:    okm.slice(48, 80),\n  };\n}\n\nfunction decrypt(encBuf, iv, key, macKey) {\n  // √∫ltimo 10 bytes = MAC; resto = ciphertext\n  const macFromFile = encBuf.slice(encBuf.length - 10);\n  const ciphertext  = encBuf.slice(0, encBuf.length - 10);\n\n  const mac = crypto.createHmac('sha256', macKey)\n    .update(Buffer.concat([iv, ciphertext]))\n    .digest()\n    .slice(0, 10);\n\n  if (!crypto.timingSafeEqual(mac, macFromFile)) {\n    throw new Error('MAC inv√°lido ‚Äî mediaKey n√£o confere ou link expirou.');\n  }\n\n  const d = crypto.createDecipheriv('aes-256-cbc', key, iv);\n  return Buffer.concat([d.update(ciphertext), d.final()]);\n}\n\nconst out = [];\n\nfor (const item of items) {\n  const mediaKeyB64 = $('Get_Info').first().json.mediaKey;\n  const bin = item.binary?.data || item.binary?.enc; // usa 'data' (HTTP). 'enc' como fallback.\n\n  if (!mediaKeyB64 || !bin) {\n    throw new Error('Faltam dados neste item: json.mediaKey ou binary.data/enc.');\n  }\n\n  const encBuf = Buffer.from(bin.data, 'base64');\n  const { iv, cipherKey, macKey } = deriveKeys(mediaKeyB64);\n  const audioBuf = decrypt(encBuf, iv, cipherKey, macKey);\n\n  const mime = (item.json?.mimetype && String(item.json.mimetype).startsWith('audio/'))\n    ? item.json.mimetype\n    : 'audio/ogg; codecs=opus';\n\n  out.push({\n    json: item.json,\n    binary: {\n      audio: {\n        data: audioBuf.toString('base64'),\n        mimeType: mime,\n        fileName: 'audio.ogg',\n      },\n    },\n  });\n}\n\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3700,
        1520
      ],
      "id": "ecc2e290-77ec-4b29-9565-fd15acd20a2c",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "// Decrypt de m√≠dia WhatsApp (.enc) ‚Äî IMAGEM\n// Espera: json.mediaKey + json.mimetype (image/jpeg) + binary.data (.enc)\n// Sa√≠da: binary.image (jpeg/png conforme mimetype)\n\nconst crypto = require('crypto');\n\n// HKDF-SHA256 manual (Extract + Expand)\nfunction hkdf(mediaKeyB64, infoStr, length) {\n  const ikm  = Buffer.from(mediaKeyB64, 'base64');\n  const salt = Buffer.alloc(32, 0);\n  const prk  = crypto.createHmac('sha256', salt).update(ikm).digest();\n  const info = Buffer.from(infoStr, 'utf8');\n  let t = Buffer.alloc(0), okm = Buffer.alloc(0), c = 1;\n  while (okm.length < length) {\n    t = crypto.createHmac('sha256', prk)\n      .update(Buffer.concat([t, info, Buffer.from([c])]))\n      .digest();\n    okm = Buffer.concat([okm, t]);\n    c++;\n  }\n  return okm.slice(0, length);\n}\n\nfunction deriveKeysImage(mediaKeyB64) {\n  const okm = hkdf(mediaKeyB64, 'WhatsApp Image Keys', 112); // << chave para IMAGEM\n  return {\n    iv:        okm.slice(0, 16),\n    cipherKey: okm.slice(16, 48),\n    macKey:    okm.slice(48, 80),\n  };\n}\n\nfunction decrypt(encBuf, iv, key, macKey) {\n  const macFromFile = encBuf.slice(encBuf.length - 10);\n  const ciphertext  = encBuf.slice(0, encBuf.length - 10);\n\n  const mac = crypto.createHmac('sha256', macKey)\n    .update(Buffer.concat([iv, ciphertext]))\n    .digest()\n    .slice(0, 10);\n\n  if (!crypto.timingSafeEqual(mac, macFromFile)) {\n    throw new Error('MAC inv√°lido ‚Äî mediaKey n√£o confere ou link expirou.');\n  }\n\n  const d = crypto.createDecipheriv('aes-256-cbc', key, iv);\n  return Buffer.concat([d.update(ciphertext), d.final()]);\n}\n\nconst out = [];\nfor (const item of items) {\n  const mediaKeyB64 = $('Get_Info').first().json.mediaKey;\n  const mime = item.json?.mimetype || 'image/jpeg';\n  const bin = item.binary?.data || item.binary?.enc;\n\n  if (!mediaKeyB64 || !bin) {\n    throw new Error('Faltam dados: json.mediaKey ou binary.data/enc ausentes.');\n  }\n  if (!String(mime).startsWith('image/')) {\n    throw new Error(`mimetype inv√°lido para imagem: ${mime}`);\n  }\n\n  const encBuf = Buffer.from(bin.data, 'base64');\n  const { iv, cipherKey, macKey } = deriveKeysImage(mediaKeyB64);\n  const imgBuf = decrypt(encBuf, iv, cipherKey, macKey);\n\n  // define extens√£o a partir do mime\n  const ext = mime.includes('png') ? 'png' : (mime.includes('webp') ? 'webp' : 'jpg');\n\n  out.push({\n    json: item.json,\n    binary: {\n      image: {\n        data: imgBuf.toString('base64'),\n        mimeType: mime,\n        fileName: `image.${ext}`,\n      },\n    },\n  });\n}\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3700,
        1720
      ],
      "id": "a491860e-b341-4b3d-a535-98c15e6d9162",
      "name": "Code2"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "document",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3500,
        1920
      ],
      "id": "d98abbfc-4444-4b68-b1f7-6d82f4c3884b",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "url": "={{ $('Get_Info').item.json.pdf_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3900,
        1920
      ],
      "id": "87fe4af4-730f-48f6-b971-6d86eed6d9f0",
      "name": "download_pdf"
    },
    {
      "parameters": {
        "jsCode": "// Decrypt WhatsApp document (.enc) ‚Üí PDF/Doc/etc.\n// Espera no item: json.mediaKey, json.mimetype, (opcional json.fileName) + binary.data (.enc)\n// Sa√≠da: binary.document com o arquivo claro\n\nconst crypto = require('crypto');\n\n// HKDF-SHA256 manual (Extract + Expand)\nfunction hkdf(mediaKeyB64, infoStr, length) {\n  const ikm  = Buffer.from(mediaKeyB64, 'base64');\n  const salt = Buffer.alloc(32, 0);\n  const prk  = crypto.createHmac('sha256', salt).update(ikm).digest();\n  const info = Buffer.from(infoStr, 'utf8');\n  let t = Buffer.alloc(0), okm = Buffer.alloc(0), c = 1;\n  while (okm.length < length) {\n    t = crypto.createHmac('sha256', prk)\n      .update(Buffer.concat([t, info, Buffer.from([c])]))\n      .digest();\n    okm = Buffer.concat([okm, t]);\n    c++;\n  }\n  return okm.slice(0, length);\n}\n\nfunction deriveKeysForDocument(mediaKeyB64) {\n  const okm = hkdf(mediaKeyB64, 'WhatsApp Document Keys', 112);\n  return {\n    iv:        okm.slice(0, 16),\n    cipherKey: okm.slice(16, 48),\n    macKey:    okm.slice(48, 80),\n  };\n}\n\nfunction decrypt(encBuf, iv, key, macKey) {\n  const macFromFile = encBuf.slice(encBuf.length - 10);\n  const ciphertext  = encBuf.slice(0, encBuf.length - 10);\n\n  const mac = crypto.createHmac('sha256', macKey)\n    .update(Buffer.concat([iv, ciphertext]))\n    .digest()\n    .slice(0, 10);\n\n  if (!crypto.timingSafeEqual(mac, macFromFile)) {\n    throw new Error('MAC inv√°lido ‚Äî mediaKey n√£o confere ou link expirou.');\n  }\n\n  const d = crypto.createDecipheriv('aes-256-cbc', key, iv);\n  return Buffer.concat([d.update(ciphertext), d.final()]);\n}\n\n// map simples pra extens√£o\nfunction extFromMime(m) {\n  if (!m) return 'bin';\n  if (m === 'application/pdf') return 'pdf';\n  if (m.includes('word')) return 'docx';\n  if (m.includes('msword')) return 'doc';\n  if (m.includes('spreadsheetml')) return 'xlsx';\n  if (m.includes('ms-excel')) return 'xls';\n  if (m.includes('presentationml')) return 'pptx';\n  if (m.includes('zip')) return 'zip';\n  return m.split('/').pop().split('+').shift() || 'bin';\n}\n\nconst out = [];\nfor (const item of items) {\n  const mediaKeyB64 = $('Get_Info').first().json.mediaKey;\n  const mime = item.json?.mimetype || 'application/pdf';\n  const fileName = item.json?.fileName;\n  const bin = item.binary?.data || item.binary?.enc;\n\n  if (!mediaKeyB64 || !bin) {\n    throw new Error('Faltam dados: json.mediaKey ou binary.data/enc ausentes.');\n  }\n  const encBuf = Buffer.from(bin.data, 'base64');\n  const { iv, cipherKey, macKey } = deriveKeysForDocument(mediaKeyB64);\n  const fileBuf = decrypt(encBuf, iv, cipherKey, macKey);\n\n  const ext = fileName?.split('.').pop() || extFromMime(mime);\n  const safeName = fileName || `document.${ext}`;\n\n  out.push({\n    json: item.json,\n    binary: {\n      document: {\n        data: fileBuf.toString('base64'),\n        mimeType: mime,\n        fileName: safeName,\n      },\n    },\n  });\n}\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3700,
        1920
      ],
      "id": "77e363dd-c11f-41fb-b804-1a914ab13db5",
      "name": "Code3"
    },
    {
      "parameters": {
        "url": "={{ $('Get_Info').item.json.audio_url }}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3900,
        1520
      ],
      "id": "94af4db5-deab-4a1d-9ace-dc79b8ece18e",
      "name": "download_audio",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "audio",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -3500,
        -20
      ],
      "id": "612c46a2-dbd4-4ae7-b0fe-46fefa211018",
      "name": "transcribe_audio3",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('Get_Info').item.json.image_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          },
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3900,
        160
      ],
      "id": "566219c1-ca1d-448d-9a4f-dad4af477600",
      "name": "download_image1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "text": "descreva a imagem",
        "inputType": "base64",
        "binaryPropertyName": "image",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -3500,
        160
      ],
      "id": "43fb4832-af43-43f1-aeef-bddac754c9c9",
      "name": "describe_image1",
      "credentials": {
        "openAiApi": {
          "id": "zvMUloVC3G211JYy",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "257ef35c-0705-4c83-b58e-683ca6607c93",
                    "leftValue": "={{ $('Get_Info').item.json.tipo }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Get_Info').item.json.tipo }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "64451f87-a1da-4bf6-928c-ee41e884d829"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "54d70c63-a0f8-4036-8d08-b013fdc52650",
                    "leftValue": "={{ $('Get_Info').item.json.tipo }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "photo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3b3da044-f68e-48ec-a374-85593565dfc0",
                    "leftValue": "={{ $('Get_Info').item.json.tipo }}",
                    "rightValue": "documentMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3920,
        560
      ],
      "id": "7d76b0fd-bdf6-41b4-a7e1-2d969ac63d49",
      "name": "type_of_message3"
    },
    {
      "parameters": {
        "url": "={{ $('Get_Info').item.json.audio_url }}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3900,
        -20
      ],
      "id": "df58b4e1-276c-46a1-8112-e97af61fbdf7",
      "name": "download_audio3",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node ‚Äî decrypt WhatsApp .enc (sem Merge)\n// Entrada esperada no MESMO item:\n//  - json.mediaKey   (do seu Get_Info / Set)\n//  - json.mimetype   (opcional)\n//  - binary.data     (do HTTP Request ‚Üí Response=File, Binary Property=data)\n// Sa√≠da: binary.audio (.ogg) pronto para o OpenAI Transcribe\n\nconst crypto = require('crypto');\n\n// HKDF-SHA256 manual (Extract + Expand)\nfunction hkdf(mediaKeyB64, infoStr, length) {\n  const ikm  = Buffer.from(mediaKeyB64, 'base64');\n  const salt = Buffer.alloc(32, 0);\n  const prk  = crypto.createHmac('sha256', salt).update(ikm).digest();\n  const info = Buffer.from(infoStr, 'utf8');\n  let t = Buffer.alloc(0), okm = Buffer.alloc(0), c = 1;\n  while (okm.length < length) {\n    t = crypto.createHmac('sha256', prk)\n      .update(Buffer.concat([t, info, Buffer.from([c])]))\n      .digest();\n    okm = Buffer.concat([okm, t]);\n    c++;\n  }\n  return okm.slice(0, length);\n}\n\nfunction deriveKeys(mediaKeyB64) {\n  const okm = hkdf(mediaKeyB64, 'WhatsApp Audio Keys', 112);\n  return {\n    iv:        okm.slice(0, 16),\n    cipherKey: okm.slice(16, 48),\n    macKey:    okm.slice(48, 80),\n  };\n}\n\nfunction decrypt(encBuf, iv, key, macKey) {\n  // √∫ltimo 10 bytes = MAC; resto = ciphertext\n  const macFromFile = encBuf.slice(encBuf.length - 10);\n  const ciphertext  = encBuf.slice(0, encBuf.length - 10);\n\n  const mac = crypto.createHmac('sha256', macKey)\n    .update(Buffer.concat([iv, ciphertext]))\n    .digest()\n    .slice(0, 10);\n\n  if (!crypto.timingSafeEqual(mac, macFromFile)) {\n    throw new Error('MAC inv√°lido ‚Äî mediaKey n√£o confere ou link expirou.');\n  }\n\n  const d = crypto.createDecipheriv('aes-256-cbc', key, iv);\n  return Buffer.concat([d.update(ciphertext), d.final()]);\n}\n\nconst out = [];\n\nfor (const item of items) {\n  const mediaKeyB64 = $('Get_Info').first().json.mediaKey;\n  const bin = item.binary?.data || item.binary?.enc; // usa 'data' (HTTP). 'enc' como fallback.\n\n  if (!mediaKeyB64 || !bin) {\n    throw new Error('Faltam dados neste item: json.mediaKey ou binary.data/enc.');\n  }\n\n  const encBuf = Buffer.from(bin.data, 'base64');\n  const { iv, cipherKey, macKey } = deriveKeys(mediaKeyB64);\n  const audioBuf = decrypt(encBuf, iv, cipherKey, macKey);\n\n  const mime = (item.json?.mimetype && String(item.json.mimetype).startsWith('audio/'))\n    ? item.json.mimetype\n    : 'audio/ogg; codecs=opus';\n\n  out.push({\n    json: item.json,\n    binary: {\n      audio: {\n        data: audioBuf.toString('base64'),\n        mimeType: mime,\n        fileName: 'audio.ogg',\n      },\n    },\n  });\n}\n\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3700,
        -20
      ],
      "id": "8270be79-49e4-454b-a875-d029618bda8a",
      "name": "Code4"
    },
    {
      "parameters": {
        "jsCode": "// Decrypt de m√≠dia WhatsApp (.enc) ‚Äî IMAGEM\n// Espera: json.mediaKey + json.mimetype (image/jpeg) + binary.data (.enc)\n// Sa√≠da: binary.image (jpeg/png conforme mimetype)\n\nconst crypto = require('crypto');\n\n// HKDF-SHA256 manual (Extract + Expand)\nfunction hkdf(mediaKeyB64, infoStr, length) {\n  const ikm  = Buffer.from(mediaKeyB64, 'base64');\n  const salt = Buffer.alloc(32, 0);\n  const prk  = crypto.createHmac('sha256', salt).update(ikm).digest();\n  const info = Buffer.from(infoStr, 'utf8');\n  let t = Buffer.alloc(0), okm = Buffer.alloc(0), c = 1;\n  while (okm.length < length) {\n    t = crypto.createHmac('sha256', prk)\n      .update(Buffer.concat([t, info, Buffer.from([c])]))\n      .digest();\n    okm = Buffer.concat([okm, t]);\n    c++;\n  }\n  return okm.slice(0, length);\n}\n\nfunction deriveKeysImage(mediaKeyB64) {\n  const okm = hkdf(mediaKeyB64, 'WhatsApp Image Keys', 112); // << chave para IMAGEM\n  return {\n    iv:        okm.slice(0, 16),\n    cipherKey: okm.slice(16, 48),\n    macKey:    okm.slice(48, 80),\n  };\n}\n\nfunction decrypt(encBuf, iv, key, macKey) {\n  const macFromFile = encBuf.slice(encBuf.length - 10);\n  const ciphertext  = encBuf.slice(0, encBuf.length - 10);\n\n  const mac = crypto.createHmac('sha256', macKey)\n    .update(Buffer.concat([iv, ciphertext]))\n    .digest()\n    .slice(0, 10);\n\n  if (!crypto.timingSafeEqual(mac, macFromFile)) {\n    throw new Error('MAC inv√°lido ‚Äî mediaKey n√£o confere ou link expirou.');\n  }\n\n  const d = crypto.createDecipheriv('aes-256-cbc', key, iv);\n  return Buffer.concat([d.update(ciphertext), d.final()]);\n}\n\nconst out = [];\nfor (const item of items) {\n  const mediaKeyB64 = $('Get_Info').first().json.mediaKey;\n  const mime = item.json?.mimetype || 'image/jpeg';\n  const bin = item.binary?.data || item.binary?.enc;\n\n  if (!mediaKeyB64 || !bin) {\n    throw new Error('Faltam dados: json.mediaKey ou binary.data/enc ausentes.');\n  }\n  if (!String(mime).startsWith('image/')) {\n    throw new Error(`mimetype inv√°lido para imagem: ${mime}`);\n  }\n\n  const encBuf = Buffer.from(bin.data, 'base64');\n  const { iv, cipherKey, macKey } = deriveKeysImage(mediaKeyB64);\n  const imgBuf = decrypt(encBuf, iv, cipherKey, macKey);\n\n  // define extens√£o a partir do mime\n  const ext = mime.includes('png') ? 'png' : (mime.includes('webp') ? 'webp' : 'jpg');\n\n  out.push({\n    json: item.json,\n    binary: {\n      image: {\n        data: imgBuf.toString('base64'),\n        mimeType: mime,\n        fileName: `image.${ext}`,\n      },\n    },\n  });\n}\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3700,
        160
      ],
      "id": "6354e5b7-3a23-441f-af5e-3cefa6446bfc",
      "name": "Code5"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "document",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3500,
        340
      ],
      "id": "42de8d60-692a-4412-8e65-dd834de84633",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "url": "={{ $('Get_Info').item.json.pdf_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3900,
        340
      ],
      "id": "bbb0a0f1-c230-4e38-88eb-9cd0022d27fe",
      "name": "download_pdf1"
    },
    {
      "parameters": {
        "jsCode": "// Decrypt WhatsApp document (.enc) ‚Üí PDF/Doc/etc.\n// Espera no item: json.mediaKey, json.mimetype, (opcional json.fileName) + binary.data (.enc)\n// Sa√≠da: binary.document com o arquivo claro\n\nconst crypto = require('crypto');\n\n// HKDF-SHA256 manual (Extract + Expand)\nfunction hkdf(mediaKeyB64, infoStr, length) {\n  const ikm  = Buffer.from(mediaKeyB64, 'base64');\n  const salt = Buffer.alloc(32, 0);\n  const prk  = crypto.createHmac('sha256', salt).update(ikm).digest();\n  const info = Buffer.from(infoStr, 'utf8');\n  let t = Buffer.alloc(0), okm = Buffer.alloc(0), c = 1;\n  while (okm.length < length) {\n    t = crypto.createHmac('sha256', prk)\n      .update(Buffer.concat([t, info, Buffer.from([c])]))\n      .digest();\n    okm = Buffer.concat([okm, t]);\n    c++;\n  }\n  return okm.slice(0, length);\n}\n\nfunction deriveKeysForDocument(mediaKeyB64) {\n  const okm = hkdf(mediaKeyB64, 'WhatsApp Document Keys', 112);\n  return {\n    iv:        okm.slice(0, 16),\n    cipherKey: okm.slice(16, 48),\n    macKey:    okm.slice(48, 80),\n  };\n}\n\nfunction decrypt(encBuf, iv, key, macKey) {\n  const macFromFile = encBuf.slice(encBuf.length - 10);\n  const ciphertext  = encBuf.slice(0, encBuf.length - 10);\n\n  const mac = crypto.createHmac('sha256', macKey)\n    .update(Buffer.concat([iv, ciphertext]))\n    .digest()\n    .slice(0, 10);\n\n  if (!crypto.timingSafeEqual(mac, macFromFile)) {\n    throw new Error('MAC inv√°lido ‚Äî mediaKey n√£o confere ou link expirou.');\n  }\n\n  const d = crypto.createDecipheriv('aes-256-cbc', key, iv);\n  return Buffer.concat([d.update(ciphertext), d.final()]);\n}\n\n// map simples pra extens√£o\nfunction extFromMime(m) {\n  if (!m) return 'bin';\n  if (m === 'application/pdf') return 'pdf';\n  if (m.includes('word')) return 'docx';\n  if (m.includes('msword')) return 'doc';\n  if (m.includes('spreadsheetml')) return 'xlsx';\n  if (m.includes('ms-excel')) return 'xls';\n  if (m.includes('presentationml')) return 'pptx';\n  if (m.includes('zip')) return 'zip';\n  return m.split('/').pop().split('+').shift() || 'bin';\n}\n\nconst out = [];\nfor (const item of items) {\n  const mediaKeyB64 = $('Get_Info').first().json.mediaKey;\n  const mime = item.json?.mimetype || 'application/pdf';\n  const fileName = item.json?.fileName;\n  const bin = item.binary?.data || item.binary?.enc;\n\n  if (!mediaKeyB64 || !bin) {\n    throw new Error('Faltam dados: json.mediaKey ou binary.data/enc ausentes.');\n  }\n  const encBuf = Buffer.from(bin.data, 'base64');\n  const { iv, cipherKey, macKey } = deriveKeysForDocument(mediaKeyB64);\n  const fileBuf = decrypt(encBuf, iv, cipherKey, macKey);\n\n  const ext = fileName?.split('.').pop() || extFromMime(mime);\n  const safeName = fileName || `document.${ext}`;\n\n  out.push({\n    json: item.json,\n    binary: {\n      document: {\n        data: fileBuf.toString('base64'),\n        mimeType: mime,\n        fileName: safeName,\n      },\n    },\n  });\n}\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3700,
        340
      ],
      "id": "a7b065ab-1674-40bd-9c00-865f43f084dc",
      "name": "Code6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eab2b597-3ea6-4d93-8fef-305086cea64a",
              "name": "full_name",
              "value": "={{ $json.body.pushName }}",
              "type": "string"
            },
            {
              "id": "bad83215-2654-4d19-bc8c-8973064757fe",
              "name": "first_name",
              "value": "={{ $json.body.pushName.split(' ').first() }}",
              "type": "string"
            },
            {
              "id": "dc49ff7f-3617-4ee9-ab12-5ef0ccad3b5e",
              "name": "telefone",
              "value": "={{ $json.body.key.remoteJid.split('@').first() }}",
              "type": "string"
            },
            {
              "id": "80231e5c-5db5-4a35-8bfa-2dbb6e851233",
              "name": "message",
              "value": "={{ $json.body.message.conversation }}",
              "type": "string"
            },
            {
              "id": "caa0e043-67b8-4ed6-93d1-6a2414587ac3",
              "name": "image_url",
              "value": "={{ $json.body.message.imageMessage.url }}",
              "type": "string"
            },
            {
              "id": "543a85ce-abdc-4292-b12e-0d62a36ae376",
              "name": "audio_url",
              "value": "={{ $json.body.message.audioMessage.url }}",
              "type": "string"
            },
            {
              "id": "51968ad0-2fb8-4a0a-b8af-1e3fd6d65486",
              "name": "pdf_url",
              "value": "={{ $json.body.message.documentMessage.url }}",
              "type": "string"
            },
            {
              "id": "42b59d7a-a1cc-45e8-b9c7-ac097d221d91",
              "name": "timestamp",
              "value": "={{ $json.body.created_at }}",
              "type": "string"
            },
            {
              "id": "52da45d4-a14b-4dec-a433-f3bcab5cadf1",
              "name": "tipo",
              "value": "={{ $json.body.messageType }}",
              "type": "string"
            },
            {
              "id": "b88b4009-cac7-452d-9e2c-735543db8e63",
              "name": "mediaKey",
              "value": "={{ $json.body.message.audioMessage?.mediaKey || $json.body.message.imageMessage?.mediaKey ||$json.body.message.documentMessage?.mediaKey }}",
              "type": "string"
            },
            {
              "id": "11953d34-177f-4107-afd8-984c283ce23f",
              "name": "mimetype",
              "value": "={{ $json.body.message.audioMessage?.mimetype ||$json.body.message.imageMessage?.mimetype || $json.body.message.documentMessage.mimetype  }}",
              "type": "string"
            },
            {
              "id": "5548114f-66a2-4d69-88ae-ec60deb26d2f",
              "name": "token",
              "value": "MPNjjhYHrZG",
              "type": "string"
            },
            {
              "id": "4e5b79ce-8579-4af7-8b38-b92e63226514",
              "name": "instance_key ",
              "value": "megastart-MPNjjhYHrZG",
              "type": "string"
            },
            {
              "id": "dc00de99-af27-492b-a3b7-be0cc94357c4",
              "name": "host",
              "value": "apistart03.megaapi.com.br",
              "type": "string"
            },
            {
              "id": "c9c3aa35-6768-4da7-9d58-8646b17e64f4",
              "name": "remoteJid",
              "value": "={{ $json.body.key.remoteJid }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5360,
        1080
      ],
      "id": "1078d9b7-000b-4466-89f3-b337db610245",
      "name": "Get_Info"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Get_Info').item.json.host }}/rest/sendMessage/{{ $('Get_Info').item.json['instance_key '] }}/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Get_Info').item.json.token }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messageData\": {\n    \"to\": \"{{ $('Get_Info').item.json.remoteJid }}\",\n    \"text\": \"{{ $json.text }}\"\n  }\n}\n",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -360,
        1480
      ],
      "id": "ee4ccc48-de82-4ddc-8b09-b4cbd5b4f5af",
      "name": "enviar mensagem",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Get_Info').item.json.host }}/rest/sendMessage/{{ $('Get_Info').item.json['instance_key '] }}/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Get_Info').item.json.token }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messageData\": {\n    \"to\": \"{{ $('Get_Info').item.json.remoteJid }}\",\n    \"text\": \"{{ $json.text }}\"\n  }\n}\n",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -600,
        940
      ],
      "id": "5387129e-f0a3-4bb9-b51c-c3e51db464d3",
      "name": "enviar mensagem1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Get_Info').item.json.host }}/rest/sendMessage/{{ $('Get_Info').item.json['instance_key '] }}/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Get_Info').item.json.token }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messageData\": {\n    \"to\": \"{{ $('Get_Info').item.json.remoteJid }}\",\n    \"text\": \"{{ $json.text }}\"\n  }\n}\n",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -760,
        -360
      ],
      "id": "56364103-1305-43ce-9047-c854ec6ccfe3",
      "name": "enviar mensagem2",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Get_Info').item.json.host }}/rest/sendMessage/{{ $('Get_Info').item.json['instance_key '] }}/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Get_Info').item.json.token }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messageData\": {\n    \"to\": \"{{ $('Get_Info').item.json.remoteJid }}\",\n    \"text\": \"{{ $json.text }}\"\n  }\n}\n",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -980,
        -880
      ],
      "id": "98c48d88-25df-47a2-9429-f9d7f3881ea0",
      "name": "enviar mensagem3",
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {
    "Webhook1": [
      {
        "json": {
          "headers": {
            "host": "ai-agents-n8n.jyfwsi.easypanel.host",
            "user-agent": "axios/1.7.7",
            "content-length": "602",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "5.78.119.53",
            "x-forwarded-host": "ai-agents-n8n.jyfwsi.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "37ec1568b607",
            "x-real-ip": "5.78.119.53"
          },
          "params": {},
          "query": {},
          "body": {
            "instance_key": "megastart-MPNjjhYHrZG",
            "jid": "558187681099@s.whatsapp.net",
            "messageType": "conversation",
            "key": {
              "remoteJid": "557193061031@s.whatsapp.net",
              "fromMe": false,
              "id": "3AD00E76C2EDCF13B8DE"
            },
            "messageTimestamp": 1755002917,
            "pushName": "Adonias Santos",
            "broadcast": false,
            "message": {
              "conversation": "Teste",
              "messageContextInfo": {
                "deviceListMetadata": {
                  "senderKeyHash": "UmUxvNRnlnioHg==",
                  "senderTimestamp": "1754326046",
                  "recipientKeyHash": "0BGOh+J3lFbgyQ==",
                  "recipientTimestamp": "1754957340"
                },
                "deviceListMetadataVersion": 2,
                "messageSecret": "WmI+IRbtqxUcH7GjkjchRlMnz/RzFR3jM+tN7x/QGqs="
              }
            },
            "isGroup": false
          },
          "webhookUrl": "https://ai-agents-n8n.jyfwsi.easypanel.host/webhook-test/paes",
          "executionMode": "test"
        }
      }
    ]
  },
  "connections": {
    "Check_lead": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "type_of_message3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "type_of_message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agente de Treinamento RAG",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agente de Treinamento RAG": {
      "main": [
        [
          {
            "node": "Deleta linhas antigas do documento1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Summarize1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Download File1": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel2": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize1": {
      "main": [
        [
          {
            "node": "chunck_splitter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "parse_date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta linhas antigas do documento1": {
      "main": [
        [
          {
            "node": "Search files and folders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Deleta linhas antigas do documento1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search files and folders": {
      "main": [
        [
          {
            "node": "Download File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Treinamento_perguntas_feito": {
      "ai_tool": [
        [
          {
            "node": "Agente de Treinamento RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar_treinamento_perguntas": {
      "ai_tool": [
        [
          {
            "node": "Agente de Treinamento RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Treinamento_agenda_feito": {
      "ai_tool": [
        [
          {
            "node": "Agente de Treinamento RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar_treinamento_agenda": {
      "ai_tool": [
        [
          {
            "node": "Agente de Treinamento RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Check_lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Agente de Treinamento RAG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "buscar_documentos": {
      "ai_tool": [
        [
          {
            "node": "LidIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "message1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "join_messages1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "join_messages1": {
      "main": [
        [
          {
            "node": "clean1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "clean1": {
      "main": [
        [
          {
            "node": "LidIA _cadastro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "enviar mensagem2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_audio1": {
      "main": [
        [
          {
            "node": "transcribe_audio1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe_audio1": {
      "main": [
        []
      ]
    },
    "type_of_message1": {
      "main": [
        [],
        [
          {
            "node": "download_audio1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "LidIA _cadastro",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "LidIA _cadastro",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "cadastrar_contato": {
      "ai_tool": [
        [
          {
            "node": "LidIA _cadastro",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "message2": {
      "main": [
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "join_messages2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "join_messages2": {
      "main": [
        [
          {
            "node": "clean2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "clean2": {
      "main": [
        [
          {
            "node": "LidIA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "enviar mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Update a row2",
            "type": "main",
            "index": 0
          },
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait5": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_audio2": {
      "main": [
        [
          {
            "node": "transcribe_audio2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe_audio2": {
      "main": [
        []
      ]
    },
    "type_of_message2": {
      "main": [
        [],
        [
          {
            "node": "download_audio2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "LidIA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "LidIA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Get_Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Treinamento_base_feito": {
      "ai_tool": [
        [
          {
            "node": "Agente de Treinamento RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar_treinamento_base": {
      "ai_tool": [
        [
          {
            "node": "Agente de Treinamento RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "chunck_splitter": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "parse_date": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "notificar_time_interno": {
      "ai_tool": [
        [
          {
            "node": "LidIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "LidIA": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "enviar mensagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "enviar mensagem3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LidIA _cadastro": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "digitando4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "digitando4": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_image": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "type_of_message": {
      "main": [
        [
          {
            "node": "message2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "download_audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "download_image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "download_pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "transcribe_audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "describe_image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_pdf": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_audio": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_image1": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "type_of_message3": {
      "main": [
        [
          {
            "node": "message1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "download_audio3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "download_image1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "download_pdf1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_audio3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "transcribe_audio3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "describe_image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download_pdf1": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get_Info": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe_audio": {
      "main": [
        [
          {
            "node": "message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "describe_image": {
      "main": [
        [
          {
            "node": "message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviar mensagem": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe_audio3": {
      "main": [
        [
          {
            "node": "message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "describe_image1": {
      "main": [
        [
          {
            "node": "message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviar mensagem2": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b55c106f-4d79-4b7e-ab5d-d537bc62adf8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "333abb29f6ca089064f08d89243b6129a9a25bda25403c9262c8320fdd457b66"
  },
  "id": "fE2TmZl2NDoTtu0P",
  "tags": []
}